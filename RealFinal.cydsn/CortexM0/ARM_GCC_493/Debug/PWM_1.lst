ARM GAS  C:\Users\Alec\AppData\Local\Temp\ccvrjwmd.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"PWM_1.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.PWM_1_Enable,"ax",%progbits
  18              		.align	2
  19              		.global	PWM_1_Enable
  20              		.code	16
  21              		.thumb_func
  22              		.type	PWM_1_Enable, %function
  23              	PWM_1_Enable:
  24              	.LFB4:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\PWM_1.c"
   1:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/PWM_1.c **** * File Name: PWM_1.c
   3:.\Generated_Source\PSoC4/PWM_1.c **** * Version 3.30
   4:.\Generated_Source\PSoC4/PWM_1.c **** *
   5:.\Generated_Source\PSoC4/PWM_1.c **** * Description:
   6:.\Generated_Source\PSoC4/PWM_1.c **** *  The PWM User Module consist of an 8 or 16-bit counter with two 8 or 16-bit
   7:.\Generated_Source\PSoC4/PWM_1.c **** *  comparitors. Each instance of this user module is capable of generating
   8:.\Generated_Source\PSoC4/PWM_1.c **** *  two PWM outputs with the same period. The pulse width is selectable between
   9:.\Generated_Source\PSoC4/PWM_1.c **** *  1 and 255/65535. The period is selectable between 2 and 255/65536 clocks.
  10:.\Generated_Source\PSoC4/PWM_1.c **** *  The compare value output may be configured to be active when the present
  11:.\Generated_Source\PSoC4/PWM_1.c **** *  counter is less than or less than/equal to the compare value.
  12:.\Generated_Source\PSoC4/PWM_1.c **** *  A terminal count output is also provided. It generates a pulse one clock
  13:.\Generated_Source\PSoC4/PWM_1.c **** *  width wide when the counter is equal to zero.
  14:.\Generated_Source\PSoC4/PWM_1.c **** *
  15:.\Generated_Source\PSoC4/PWM_1.c **** * Note:
  16:.\Generated_Source\PSoC4/PWM_1.c **** *
  17:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************
  18:.\Generated_Source\PSoC4/PWM_1.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:.\Generated_Source\PSoC4/PWM_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:.\Generated_Source\PSoC4/PWM_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:.\Generated_Source\PSoC4/PWM_1.c **** * the software package with which this file was provided.
  22:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************/
  23:.\Generated_Source\PSoC4/PWM_1.c **** 
  24:.\Generated_Source\PSoC4/PWM_1.c **** #include "PWM_1.h"
  25:.\Generated_Source\PSoC4/PWM_1.c **** 
  26:.\Generated_Source\PSoC4/PWM_1.c **** /* Error message for removed <resource> through optimization */
  27:.\Generated_Source\PSoC4/PWM_1.c **** #ifdef PWM_1_PWMUDB_genblk1_ctrlreg__REMOVED
  28:.\Generated_Source\PSoC4/PWM_1.c ****     #error PWM_v3_30 detected with a constant 0 for the enable or \
  29:.\Generated_Source\PSoC4/PWM_1.c ****          constant 1 for reset. This will prevent the component from operating.
  30:.\Generated_Source\PSoC4/PWM_1.c **** #endif /* PWM_1_PWMUDB_genblk1_ctrlreg__REMOVED */
  31:.\Generated_Source\PSoC4/PWM_1.c **** 
  32:.\Generated_Source\PSoC4/PWM_1.c **** uint8 PWM_1_initVar = 0u;
ARM GAS  C:\Users\Alec\AppData\Local\Temp\ccvrjwmd.s 			page 2


  33:.\Generated_Source\PSoC4/PWM_1.c **** 
  34:.\Generated_Source\PSoC4/PWM_1.c **** 
  35:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
  36:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_Start
  37:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
  38:.\Generated_Source\PSoC4/PWM_1.c **** *
  39:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
  40:.\Generated_Source\PSoC4/PWM_1.c **** *  The start function initializes the pwm with the default values, the
  41:.\Generated_Source\PSoC4/PWM_1.c **** *  enables the counter to begin counting.  It does not enable interrupts,
  42:.\Generated_Source\PSoC4/PWM_1.c **** *  the EnableInt command should be called if interrupt generation is required.
  43:.\Generated_Source\PSoC4/PWM_1.c **** *
  44:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
  45:.\Generated_Source\PSoC4/PWM_1.c **** *  None
  46:.\Generated_Source\PSoC4/PWM_1.c **** *
  47:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
  48:.\Generated_Source\PSoC4/PWM_1.c **** *  None
  49:.\Generated_Source\PSoC4/PWM_1.c **** *
  50:.\Generated_Source\PSoC4/PWM_1.c **** * Global variables:
  51:.\Generated_Source\PSoC4/PWM_1.c **** *  PWM_1_initVar: Is modified when this function is called for the
  52:.\Generated_Source\PSoC4/PWM_1.c **** *   first time. Is used to ensure that initialization happens only once.
  53:.\Generated_Source\PSoC4/PWM_1.c **** *
  54:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
  55:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_Start(void) 
  56:.\Generated_Source\PSoC4/PWM_1.c **** {
  57:.\Generated_Source\PSoC4/PWM_1.c ****     /* If not Initialized then initialize all required hardware and software */
  58:.\Generated_Source\PSoC4/PWM_1.c ****     if(PWM_1_initVar == 0u)
  59:.\Generated_Source\PSoC4/PWM_1.c ****     {
  60:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_Init();
  61:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_initVar = 1u;
  62:.\Generated_Source\PSoC4/PWM_1.c ****     }
  63:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_Enable();
  64:.\Generated_Source\PSoC4/PWM_1.c **** 
  65:.\Generated_Source\PSoC4/PWM_1.c **** }
  66:.\Generated_Source\PSoC4/PWM_1.c **** 
  67:.\Generated_Source\PSoC4/PWM_1.c **** 
  68:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
  69:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_Init
  70:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
  71:.\Generated_Source\PSoC4/PWM_1.c **** *
  72:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
  73:.\Generated_Source\PSoC4/PWM_1.c **** *  Initialize component's parameters to the parameters set by user in the
  74:.\Generated_Source\PSoC4/PWM_1.c **** *  customizer of the component placed onto schematic. Usually called in
  75:.\Generated_Source\PSoC4/PWM_1.c **** *  PWM_1_Start().
  76:.\Generated_Source\PSoC4/PWM_1.c **** *
  77:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
  78:.\Generated_Source\PSoC4/PWM_1.c **** *  None
  79:.\Generated_Source\PSoC4/PWM_1.c **** *
  80:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
  81:.\Generated_Source\PSoC4/PWM_1.c **** *  None
  82:.\Generated_Source\PSoC4/PWM_1.c **** *
  83:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
  84:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_Init(void) 
  85:.\Generated_Source\PSoC4/PWM_1.c **** {
  86:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_UsingFixedFunction || PWM_1_UseControl)
  87:.\Generated_Source\PSoC4/PWM_1.c ****         uint8 ctrl;
  88:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction || PWM_1_UseControl) */
  89:.\Generated_Source\PSoC4/PWM_1.c **** 
ARM GAS  C:\Users\Alec\AppData\Local\Temp\ccvrjwmd.s 			page 3


  90:.\Generated_Source\PSoC4/PWM_1.c ****     #if(!PWM_1_UsingFixedFunction)
  91:.\Generated_Source\PSoC4/PWM_1.c ****         #if(PWM_1_UseStatus)
  92:.\Generated_Source\PSoC4/PWM_1.c ****             /* Interrupt State Backup for Critical Region*/
  93:.\Generated_Source\PSoC4/PWM_1.c ****             uint8 PWM_1_interruptState;
  94:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_UseStatus) */
  95:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (!PWM_1_UsingFixedFunction) */
  96:.\Generated_Source\PSoC4/PWM_1.c **** 
  97:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_UsingFixedFunction)
  98:.\Generated_Source\PSoC4/PWM_1.c ****         /* You are allowed to write the compare value (FF only) */
  99:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_CONTROL |= PWM_1_CFG0_MODE;
 100:.\Generated_Source\PSoC4/PWM_1.c ****         #if (PWM_1_DeadBand2_4)
 101:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_CONTROL |= PWM_1_CFG0_DB;
 102:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_DeadBand2_4) */
 103:.\Generated_Source\PSoC4/PWM_1.c **** 
 104:.\Generated_Source\PSoC4/PWM_1.c ****         ctrl = PWM_1_CONTROL3 & ((uint8 )(~PWM_1_CTRL_CMPMODE1_MASK));
 105:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_CONTROL3 = ctrl | PWM_1_DEFAULT_COMPARE1_MODE;
 106:.\Generated_Source\PSoC4/PWM_1.c **** 
 107:.\Generated_Source\PSoC4/PWM_1.c ****          /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 108:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_RT1 &= ((uint8)(~PWM_1_RT1_MASK));
 109:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_RT1 |= PWM_1_SYNC;
 110:.\Generated_Source\PSoC4/PWM_1.c **** 
 111:.\Generated_Source\PSoC4/PWM_1.c ****         /*Enable DSI Sync all all inputs of the PWM*/
 112:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_RT1 &= ((uint8)(~PWM_1_SYNCDSI_MASK));
 113:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_RT1 |= PWM_1_SYNCDSI_EN;
 114:.\Generated_Source\PSoC4/PWM_1.c **** 
 115:.\Generated_Source\PSoC4/PWM_1.c ****     #elif (PWM_1_UseControl)
 116:.\Generated_Source\PSoC4/PWM_1.c ****         /* Set the default compare mode defined in the parameter */
 117:.\Generated_Source\PSoC4/PWM_1.c ****         ctrl = PWM_1_CONTROL & ((uint8)(~PWM_1_CTRL_CMPMODE2_MASK)) &
 118:.\Generated_Source\PSoC4/PWM_1.c ****                 ((uint8)(~PWM_1_CTRL_CMPMODE1_MASK));
 119:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_CONTROL = ctrl | PWM_1_DEFAULT_COMPARE2_MODE |
 120:.\Generated_Source\PSoC4/PWM_1.c ****                                    PWM_1_DEFAULT_COMPARE1_MODE;
 121:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 122:.\Generated_Source\PSoC4/PWM_1.c **** 
 123:.\Generated_Source\PSoC4/PWM_1.c ****     #if (!PWM_1_UsingFixedFunction)
 124:.\Generated_Source\PSoC4/PWM_1.c ****         #if (PWM_1_Resolution == 8)
 125:.\Generated_Source\PSoC4/PWM_1.c ****             /* Set FIFO 0 to 1 byte register for period*/
 126:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_AUX_CONTROLDP0 |= (PWM_1_AUX_CTRL_FIFO0_CLR);
 127:.\Generated_Source\PSoC4/PWM_1.c ****         #else /* (PWM_1_Resolution == 16)*/
 128:.\Generated_Source\PSoC4/PWM_1.c ****             /* Set FIFO 0 to 1 byte register for period */
 129:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_AUX_CONTROLDP0 |= (PWM_1_AUX_CTRL_FIFO0_CLR);
 130:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_AUX_CONTROLDP1 |= (PWM_1_AUX_CTRL_FIFO0_CLR);
 131:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_Resolution == 8) */
 132:.\Generated_Source\PSoC4/PWM_1.c **** 
 133:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_WriteCounter(PWM_1_INIT_PERIOD_VALUE);
 134:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (!PWM_1_UsingFixedFunction) */
 135:.\Generated_Source\PSoC4/PWM_1.c **** 
 136:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_WritePeriod(PWM_1_INIT_PERIOD_VALUE);
 137:.\Generated_Source\PSoC4/PWM_1.c **** 
 138:.\Generated_Source\PSoC4/PWM_1.c ****         #if (PWM_1_UseOneCompareMode)
 139:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_WriteCompare(PWM_1_INIT_COMPARE_VALUE1);
 140:.\Generated_Source\PSoC4/PWM_1.c ****         #else
 141:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_WriteCompare1(PWM_1_INIT_COMPARE_VALUE1);
 142:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_WriteCompare2(PWM_1_INIT_COMPARE_VALUE2);
 143:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_UseOneCompareMode) */
 144:.\Generated_Source\PSoC4/PWM_1.c **** 
 145:.\Generated_Source\PSoC4/PWM_1.c ****         #if (PWM_1_KillModeMinTime)
 146:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_WriteKillTime(PWM_1_MinimumKillTime);
ARM GAS  C:\Users\Alec\AppData\Local\Temp\ccvrjwmd.s 			page 4


 147:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_KillModeMinTime) */
 148:.\Generated_Source\PSoC4/PWM_1.c **** 
 149:.\Generated_Source\PSoC4/PWM_1.c ****         #if (PWM_1_DeadBandUsed)
 150:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_WriteDeadTime(PWM_1_INIT_DEAD_TIME);
 151:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_DeadBandUsed) */
 152:.\Generated_Source\PSoC4/PWM_1.c **** 
 153:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_UseStatus || PWM_1_UsingFixedFunction)
 154:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_SetInterruptMode(PWM_1_INIT_INTERRUPTS_MODE);
 155:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_UseStatus || PWM_1_UsingFixedFunction) */
 156:.\Generated_Source\PSoC4/PWM_1.c **** 
 157:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_UsingFixedFunction)
 158:.\Generated_Source\PSoC4/PWM_1.c ****         /* Globally Enable the Fixed Function Block chosen */
 159:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_GLOBAL_ENABLE |= PWM_1_BLOCK_EN_MASK;
 160:.\Generated_Source\PSoC4/PWM_1.c ****         /* Set the Interrupt source to come from the status register */
 161:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_CONTROL2 |= PWM_1_CTRL2_IRQ_SEL;
 162:.\Generated_Source\PSoC4/PWM_1.c ****     #else
 163:.\Generated_Source\PSoC4/PWM_1.c ****         #if(PWM_1_UseStatus)
 164:.\Generated_Source\PSoC4/PWM_1.c **** 
 165:.\Generated_Source\PSoC4/PWM_1.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 166:.\Generated_Source\PSoC4/PWM_1.c ****             /* Enter Critical Region*/
 167:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_interruptState = CyEnterCriticalSection();
 168:.\Generated_Source\PSoC4/PWM_1.c ****             /* Use the interrupt output of the status register for IRQ output */
 169:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_STATUS_AUX_CTRL |= PWM_1_STATUS_ACTL_INT_EN_MASK;
 170:.\Generated_Source\PSoC4/PWM_1.c **** 
 171:.\Generated_Source\PSoC4/PWM_1.c ****              /* Exit Critical Region*/
 172:.\Generated_Source\PSoC4/PWM_1.c ****             CyExitCriticalSection(PWM_1_interruptState);
 173:.\Generated_Source\PSoC4/PWM_1.c **** 
 174:.\Generated_Source\PSoC4/PWM_1.c ****             /* Clear the FIFO to enable the PWM_1_STATUS_FIFOFULL
 175:.\Generated_Source\PSoC4/PWM_1.c ****                    bit to be set on FIFO full. */
 176:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_ClearFIFO();
 177:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_UseStatus) */
 178:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 179:.\Generated_Source\PSoC4/PWM_1.c **** }
 180:.\Generated_Source\PSoC4/PWM_1.c **** 
 181:.\Generated_Source\PSoC4/PWM_1.c **** 
 182:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 183:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_Enable
 184:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 185:.\Generated_Source\PSoC4/PWM_1.c **** *
 186:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 187:.\Generated_Source\PSoC4/PWM_1.c **** *  Enables the PWM block operation
 188:.\Generated_Source\PSoC4/PWM_1.c **** *
 189:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 190:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 191:.\Generated_Source\PSoC4/PWM_1.c **** *
 192:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 193:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 194:.\Generated_Source\PSoC4/PWM_1.c **** *
 195:.\Generated_Source\PSoC4/PWM_1.c **** * Side Effects:
 196:.\Generated_Source\PSoC4/PWM_1.c **** *  This works only if software enable mode is chosen
 197:.\Generated_Source\PSoC4/PWM_1.c **** *
 198:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 199:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_Enable(void) 
 200:.\Generated_Source\PSoC4/PWM_1.c **** {
  26              		.loc 1 200 0
  27              		.cfi_startproc
 201:.\Generated_Source\PSoC4/PWM_1.c ****     /* Globally Enable the Fixed Function Block chosen */
ARM GAS  C:\Users\Alec\AppData\Local\Temp\ccvrjwmd.s 			page 5


 202:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_UsingFixedFunction)
 203:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_GLOBAL_ENABLE |= PWM_1_BLOCK_EN_MASK;
 204:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_GLOBAL_STBY_ENABLE |= PWM_1_BLOCK_STBY_EN_MASK;
 205:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 206:.\Generated_Source\PSoC4/PWM_1.c **** 
 207:.\Generated_Source\PSoC4/PWM_1.c ****     /* Enable the PWM from the control register  */
 208:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_UseControl || PWM_1_UsingFixedFunction)
 209:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_CONTROL |= PWM_1_CTRL_ENABLE;
  28              		.loc 1 209 0
  29 0000 024A     		ldr	r2, .L2
  30 0002 1178     		ldrb	r1, [r2]
  31 0004 8023     		mov	r3, #128
  32 0006 0B43     		orr	r3, r1
  33 0008 1370     		strb	r3, [r2]
 210:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_UseControl || PWM_1_UsingFixedFunction) */
 211:.\Generated_Source\PSoC4/PWM_1.c **** }
  34              		.loc 1 211 0
  35              		@ sp needed
  36 000a 7047     		bx	lr
  37              	.L3:
  38              		.align	2
  39              	.L2:
  40 000c 71000F40 		.word	1074724977
  41              		.cfi_endproc
  42              	.LFE4:
  43              		.size	PWM_1_Enable, .-PWM_1_Enable
  44              		.section	.text.PWM_1_Stop,"ax",%progbits
  45              		.align	2
  46              		.global	PWM_1_Stop
  47              		.code	16
  48              		.thumb_func
  49              		.type	PWM_1_Stop, %function
  50              	PWM_1_Stop:
  51              	.LFB5:
 212:.\Generated_Source\PSoC4/PWM_1.c **** 
 213:.\Generated_Source\PSoC4/PWM_1.c **** 
 214:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 215:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_Stop
 216:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 217:.\Generated_Source\PSoC4/PWM_1.c **** *
 218:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 219:.\Generated_Source\PSoC4/PWM_1.c **** *  The stop function halts the PWM, but does not change any modes or disable
 220:.\Generated_Source\PSoC4/PWM_1.c **** *  interrupts.
 221:.\Generated_Source\PSoC4/PWM_1.c **** *
 222:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 223:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 224:.\Generated_Source\PSoC4/PWM_1.c **** *
 225:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 226:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 227:.\Generated_Source\PSoC4/PWM_1.c **** *
 228:.\Generated_Source\PSoC4/PWM_1.c **** * Side Effects:
 229:.\Generated_Source\PSoC4/PWM_1.c **** *  If the Enable mode is set to Hardware only then this function
 230:.\Generated_Source\PSoC4/PWM_1.c **** *  has no effect on the operation of the PWM
 231:.\Generated_Source\PSoC4/PWM_1.c **** *
 232:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 233:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_Stop(void) 
 234:.\Generated_Source\PSoC4/PWM_1.c **** {
ARM GAS  C:\Users\Alec\AppData\Local\Temp\ccvrjwmd.s 			page 6


  52              		.loc 1 234 0
  53              		.cfi_startproc
 235:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_UseControl || PWM_1_UsingFixedFunction)
 236:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_CONTROL &= ((uint8)(~PWM_1_CTRL_ENABLE));
  54              		.loc 1 236 0
  55 0000 024A     		ldr	r2, .L5
  56 0002 1178     		ldrb	r1, [r2]
  57 0004 7F23     		mov	r3, #127
  58 0006 0B40     		and	r3, r1
  59 0008 1370     		strb	r3, [r2]
 237:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_UseControl || PWM_1_UsingFixedFunction) */
 238:.\Generated_Source\PSoC4/PWM_1.c **** 
 239:.\Generated_Source\PSoC4/PWM_1.c ****     /* Globally disable the Fixed Function Block chosen */
 240:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_UsingFixedFunction)
 241:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_GLOBAL_ENABLE &= ((uint8)(~PWM_1_BLOCK_EN_MASK));
 242:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_GLOBAL_STBY_ENABLE &= ((uint8)(~PWM_1_BLOCK_STBY_EN_MASK));
 243:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 244:.\Generated_Source\PSoC4/PWM_1.c **** }
  60              		.loc 1 244 0
  61              		@ sp needed
  62 000a 7047     		bx	lr
  63              	.L6:
  64              		.align	2
  65              	.L5:
  66 000c 71000F40 		.word	1074724977
  67              		.cfi_endproc
  68              	.LFE5:
  69              		.size	PWM_1_Stop, .-PWM_1_Stop
  70              		.section	.text.PWM_1_WriteCounter,"ax",%progbits
  71              		.align	2
  72              		.global	PWM_1_WriteCounter
  73              		.code	16
  74              		.thumb_func
  75              		.type	PWM_1_WriteCounter, %function
  76              	PWM_1_WriteCounter:
  77              	.LFB6:
 245:.\Generated_Source\PSoC4/PWM_1.c **** 
 246:.\Generated_Source\PSoC4/PWM_1.c **** #if (PWM_1_UseOneCompareMode)
 247:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_CompareMode1SW)
 248:.\Generated_Source\PSoC4/PWM_1.c **** 
 249:.\Generated_Source\PSoC4/PWM_1.c **** 
 250:.\Generated_Source\PSoC4/PWM_1.c ****         /*******************************************************************************
 251:.\Generated_Source\PSoC4/PWM_1.c ****         * Function Name: PWM_1_SetCompareMode
 252:.\Generated_Source\PSoC4/PWM_1.c ****         ********************************************************************************
 253:.\Generated_Source\PSoC4/PWM_1.c ****         *
 254:.\Generated_Source\PSoC4/PWM_1.c ****         * Summary:
 255:.\Generated_Source\PSoC4/PWM_1.c ****         *  This function writes the Compare Mode for the pwm output when in Dither mode,
 256:.\Generated_Source\PSoC4/PWM_1.c ****         *  Center Align Mode or One Output Mode.
 257:.\Generated_Source\PSoC4/PWM_1.c ****         *
 258:.\Generated_Source\PSoC4/PWM_1.c ****         * Parameters:
 259:.\Generated_Source\PSoC4/PWM_1.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 260:.\Generated_Source\PSoC4/PWM_1.c ****         *                defined in the H file as input arguments.
 261:.\Generated_Source\PSoC4/PWM_1.c ****         *
 262:.\Generated_Source\PSoC4/PWM_1.c ****         * Return:
 263:.\Generated_Source\PSoC4/PWM_1.c ****         *  None
 264:.\Generated_Source\PSoC4/PWM_1.c ****         *
 265:.\Generated_Source\PSoC4/PWM_1.c ****         *******************************************************************************/
ARM GAS  C:\Users\Alec\AppData\Local\Temp\ccvrjwmd.s 			page 7


 266:.\Generated_Source\PSoC4/PWM_1.c ****         void PWM_1_SetCompareMode(uint8 comparemode) 
 267:.\Generated_Source\PSoC4/PWM_1.c ****         {
 268:.\Generated_Source\PSoC4/PWM_1.c ****             #if(PWM_1_UsingFixedFunction)
 269:.\Generated_Source\PSoC4/PWM_1.c **** 
 270:.\Generated_Source\PSoC4/PWM_1.c ****                 #if(0 != PWM_1_CTRL_CMPMODE1_SHIFT)
 271:.\Generated_Source\PSoC4/PWM_1.c ****                     uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_1_CTRL_CMPMODE1_SH
 272:.\Generated_Source\PSoC4/PWM_1.c ****                 #else
 273:.\Generated_Source\PSoC4/PWM_1.c ****                     uint8 comparemodemasked = comparemode;
 274:.\Generated_Source\PSoC4/PWM_1.c ****                 #endif /* (0 != PWM_1_CTRL_CMPMODE1_SHIFT) */
 275:.\Generated_Source\PSoC4/PWM_1.c **** 
 276:.\Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_CONTROL3 &= ((uint8)(~PWM_1_CTRL_CMPMODE1_MASK)); /*Clear Existing Data */
 277:.\Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_CONTROL3 |= comparemodemasked;
 278:.\Generated_Source\PSoC4/PWM_1.c **** 
 279:.\Generated_Source\PSoC4/PWM_1.c ****             #elif (PWM_1_UseControl)
 280:.\Generated_Source\PSoC4/PWM_1.c **** 
 281:.\Generated_Source\PSoC4/PWM_1.c ****                 #if(0 != PWM_1_CTRL_CMPMODE1_SHIFT)
 282:.\Generated_Source\PSoC4/PWM_1.c ****                     uint8 comparemode1masked = ((uint8)((uint8)comparemode << PWM_1_CTRL_CMPMODE1_S
 283:.\Generated_Source\PSoC4/PWM_1.c ****                                                 PWM_1_CTRL_CMPMODE1_MASK;
 284:.\Generated_Source\PSoC4/PWM_1.c ****                 #else
 285:.\Generated_Source\PSoC4/PWM_1.c ****                     uint8 comparemode1masked = comparemode & PWM_1_CTRL_CMPMODE1_MASK;
 286:.\Generated_Source\PSoC4/PWM_1.c ****                 #endif /* (0 != PWM_1_CTRL_CMPMODE1_SHIFT) */
 287:.\Generated_Source\PSoC4/PWM_1.c **** 
 288:.\Generated_Source\PSoC4/PWM_1.c ****                 #if(0 != PWM_1_CTRL_CMPMODE2_SHIFT)
 289:.\Generated_Source\PSoC4/PWM_1.c ****                     uint8 comparemode2masked = ((uint8)((uint8)comparemode << PWM_1_CTRL_CMPMODE2_S
 290:.\Generated_Source\PSoC4/PWM_1.c ****                                                PWM_1_CTRL_CMPMODE2_MASK;
 291:.\Generated_Source\PSoC4/PWM_1.c ****                 #else
 292:.\Generated_Source\PSoC4/PWM_1.c ****                     uint8 comparemode2masked = comparemode & PWM_1_CTRL_CMPMODE2_MASK;
 293:.\Generated_Source\PSoC4/PWM_1.c ****                 #endif /* (0 != PWM_1_CTRL_CMPMODE2_SHIFT) */
 294:.\Generated_Source\PSoC4/PWM_1.c **** 
 295:.\Generated_Source\PSoC4/PWM_1.c ****                 /*Clear existing mode */
 296:.\Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_CONTROL &= ((uint8)(~(PWM_1_CTRL_CMPMODE1_MASK |
 297:.\Generated_Source\PSoC4/PWM_1.c ****                                             PWM_1_CTRL_CMPMODE2_MASK)));
 298:.\Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_CONTROL |= (comparemode1masked | comparemode2masked);
 299:.\Generated_Source\PSoC4/PWM_1.c **** 
 300:.\Generated_Source\PSoC4/PWM_1.c ****             #else
 301:.\Generated_Source\PSoC4/PWM_1.c ****                 uint8 temp = comparemode;
 302:.\Generated_Source\PSoC4/PWM_1.c ****             #endif /* (PWM_1_UsingFixedFunction) */
 303:.\Generated_Source\PSoC4/PWM_1.c ****         }
 304:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* PWM_1_CompareMode1SW */
 305:.\Generated_Source\PSoC4/PWM_1.c **** 
 306:.\Generated_Source\PSoC4/PWM_1.c **** #else /* UseOneCompareMode */
 307:.\Generated_Source\PSoC4/PWM_1.c **** 
 308:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_CompareMode1SW)
 309:.\Generated_Source\PSoC4/PWM_1.c **** 
 310:.\Generated_Source\PSoC4/PWM_1.c **** 
 311:.\Generated_Source\PSoC4/PWM_1.c ****         /*******************************************************************************
 312:.\Generated_Source\PSoC4/PWM_1.c ****         * Function Name: PWM_1_SetCompareMode1
 313:.\Generated_Source\PSoC4/PWM_1.c ****         ********************************************************************************
 314:.\Generated_Source\PSoC4/PWM_1.c ****         *
 315:.\Generated_Source\PSoC4/PWM_1.c ****         * Summary:
 316:.\Generated_Source\PSoC4/PWM_1.c ****         *  This function writes the Compare Mode for the pwm or pwm1 output
 317:.\Generated_Source\PSoC4/PWM_1.c ****         *
 318:.\Generated_Source\PSoC4/PWM_1.c ****         * Parameters:
 319:.\Generated_Source\PSoC4/PWM_1.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 320:.\Generated_Source\PSoC4/PWM_1.c ****         *                defined in the H file as input arguments.
 321:.\Generated_Source\PSoC4/PWM_1.c ****         *
 322:.\Generated_Source\PSoC4/PWM_1.c ****         * Return:
ARM GAS  C:\Users\Alec\AppData\Local\Temp\ccvrjwmd.s 			page 8


 323:.\Generated_Source\PSoC4/PWM_1.c ****         *  None
 324:.\Generated_Source\PSoC4/PWM_1.c ****         *
 325:.\Generated_Source\PSoC4/PWM_1.c ****         *******************************************************************************/
 326:.\Generated_Source\PSoC4/PWM_1.c ****         void PWM_1_SetCompareMode1(uint8 comparemode) 
 327:.\Generated_Source\PSoC4/PWM_1.c ****         {
 328:.\Generated_Source\PSoC4/PWM_1.c ****             #if(0 != PWM_1_CTRL_CMPMODE1_SHIFT)
 329:.\Generated_Source\PSoC4/PWM_1.c ****                 uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_1_CTRL_CMPMODE1_SHIFT)
 330:.\Generated_Source\PSoC4/PWM_1.c ****                                            PWM_1_CTRL_CMPMODE1_MASK;
 331:.\Generated_Source\PSoC4/PWM_1.c ****             #else
 332:.\Generated_Source\PSoC4/PWM_1.c ****                 uint8 comparemodemasked = comparemode & PWM_1_CTRL_CMPMODE1_MASK;
 333:.\Generated_Source\PSoC4/PWM_1.c ****             #endif /* (0 != PWM_1_CTRL_CMPMODE1_SHIFT) */
 334:.\Generated_Source\PSoC4/PWM_1.c **** 
 335:.\Generated_Source\PSoC4/PWM_1.c ****             #if (PWM_1_UseControl)
 336:.\Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_CONTROL &= ((uint8)(~PWM_1_CTRL_CMPMODE1_MASK)); /*Clear existing mode */
 337:.\Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_CONTROL |= comparemodemasked;
 338:.\Generated_Source\PSoC4/PWM_1.c ****             #endif /* (PWM_1_UseControl) */
 339:.\Generated_Source\PSoC4/PWM_1.c ****         }
 340:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* PWM_1_CompareMode1SW */
 341:.\Generated_Source\PSoC4/PWM_1.c **** 
 342:.\Generated_Source\PSoC4/PWM_1.c **** #if (PWM_1_CompareMode2SW)
 343:.\Generated_Source\PSoC4/PWM_1.c **** 
 344:.\Generated_Source\PSoC4/PWM_1.c **** 
 345:.\Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 346:.\Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_SetCompareMode2
 347:.\Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 348:.\Generated_Source\PSoC4/PWM_1.c ****     *
 349:.\Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 350:.\Generated_Source\PSoC4/PWM_1.c ****     *  This function writes the Compare Mode for the pwm or pwm2 output
 351:.\Generated_Source\PSoC4/PWM_1.c ****     *
 352:.\Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 353:.\Generated_Source\PSoC4/PWM_1.c ****     *  comparemode:  The new compare mode for the PWM output. Use the compare types
 354:.\Generated_Source\PSoC4/PWM_1.c ****     *                defined in the H file as input arguments.
 355:.\Generated_Source\PSoC4/PWM_1.c ****     *
 356:.\Generated_Source\PSoC4/PWM_1.c ****     * Return:
 357:.\Generated_Source\PSoC4/PWM_1.c ****     *  None
 358:.\Generated_Source\PSoC4/PWM_1.c ****     *
 359:.\Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 360:.\Generated_Source\PSoC4/PWM_1.c ****     void PWM_1_SetCompareMode2(uint8 comparemode) 
 361:.\Generated_Source\PSoC4/PWM_1.c ****     {
 362:.\Generated_Source\PSoC4/PWM_1.c **** 
 363:.\Generated_Source\PSoC4/PWM_1.c ****         #if(0 != PWM_1_CTRL_CMPMODE2_SHIFT)
 364:.\Generated_Source\PSoC4/PWM_1.c ****             uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_1_CTRL_CMPMODE2_SHIFT)) &
 365:.\Generated_Source\PSoC4/PWM_1.c ****                                                  PWM_1_CTRL_CMPMODE2_MASK;
 366:.\Generated_Source\PSoC4/PWM_1.c ****         #else
 367:.\Generated_Source\PSoC4/PWM_1.c ****             uint8 comparemodemasked = comparemode & PWM_1_CTRL_CMPMODE2_MASK;
 368:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (0 != PWM_1_CTRL_CMPMODE2_SHIFT) */
 369:.\Generated_Source\PSoC4/PWM_1.c **** 
 370:.\Generated_Source\PSoC4/PWM_1.c ****         #if (PWM_1_UseControl)
 371:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_CONTROL &= ((uint8)(~PWM_1_CTRL_CMPMODE2_MASK)); /*Clear existing mode */
 372:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_CONTROL |= comparemodemasked;
 373:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_UseControl) */
 374:.\Generated_Source\PSoC4/PWM_1.c ****     }
 375:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /*PWM_1_CompareMode2SW */
 376:.\Generated_Source\PSoC4/PWM_1.c **** 
 377:.\Generated_Source\PSoC4/PWM_1.c **** #endif /* UseOneCompareMode */
 378:.\Generated_Source\PSoC4/PWM_1.c **** 
 379:.\Generated_Source\PSoC4/PWM_1.c **** 
ARM GAS  C:\Users\Alec\AppData\Local\Temp\ccvrjwmd.s 			page 9


 380:.\Generated_Source\PSoC4/PWM_1.c **** #if (!PWM_1_UsingFixedFunction)
 381:.\Generated_Source\PSoC4/PWM_1.c **** 
 382:.\Generated_Source\PSoC4/PWM_1.c **** 
 383:.\Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 384:.\Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_WriteCounter
 385:.\Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 386:.\Generated_Source\PSoC4/PWM_1.c ****     *
 387:.\Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 388:.\Generated_Source\PSoC4/PWM_1.c ****     *  Writes a new counter value directly to the counter register. This will be
 389:.\Generated_Source\PSoC4/PWM_1.c ****     *  implemented for that currently running period and only that period. This API
 390:.\Generated_Source\PSoC4/PWM_1.c ****     *  is valid only for UDB implementation and not available for fixed function
 391:.\Generated_Source\PSoC4/PWM_1.c ****     *  PWM implementation.
 392:.\Generated_Source\PSoC4/PWM_1.c ****     *
 393:.\Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 394:.\Generated_Source\PSoC4/PWM_1.c ****     *  counter:  The period new period counter value.
 395:.\Generated_Source\PSoC4/PWM_1.c ****     *
 396:.\Generated_Source\PSoC4/PWM_1.c ****     * Return:
 397:.\Generated_Source\PSoC4/PWM_1.c ****     *  None
 398:.\Generated_Source\PSoC4/PWM_1.c ****     *
 399:.\Generated_Source\PSoC4/PWM_1.c ****     * Side Effects:
 400:.\Generated_Source\PSoC4/PWM_1.c ****     *  The PWM Period will be reloaded when a counter value will be a zero
 401:.\Generated_Source\PSoC4/PWM_1.c ****     *
 402:.\Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 403:.\Generated_Source\PSoC4/PWM_1.c ****     void PWM_1_WriteCounter(uint16 counter) \
 404:.\Generated_Source\PSoC4/PWM_1.c ****                                        
 405:.\Generated_Source\PSoC4/PWM_1.c ****     {
  78              		.loc 1 405 0
  79              		.cfi_startproc
  80              	.LVL0:
 406:.\Generated_Source\PSoC4/PWM_1.c ****         CY_SET_REG16(PWM_1_COUNTER_LSB_PTR, counter);
  81              		.loc 1 406 0
  82 0000 014B     		ldr	r3, .L8
  83 0002 1880     		strh	r0, [r3]
 407:.\Generated_Source\PSoC4/PWM_1.c ****     }
  84              		.loc 1 407 0
  85              		@ sp needed
  86 0004 7047     		bx	lr
  87              	.L9:
  88 0006 C046     		.align	2
  89              	.L8:
  90 0008 00100F40 		.word	1074728960
  91              		.cfi_endproc
  92              	.LFE6:
  93              		.size	PWM_1_WriteCounter, .-PWM_1_WriteCounter
  94              		.section	.text.PWM_1_ReadCounter,"ax",%progbits
  95              		.align	2
  96              		.global	PWM_1_ReadCounter
  97              		.code	16
  98              		.thumb_func
  99              		.type	PWM_1_ReadCounter, %function
 100              	PWM_1_ReadCounter:
 101              	.LFB7:
 408:.\Generated_Source\PSoC4/PWM_1.c **** 
 409:.\Generated_Source\PSoC4/PWM_1.c **** 
 410:.\Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 411:.\Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_ReadCounter
 412:.\Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
ARM GAS  C:\Users\Alec\AppData\Local\Temp\ccvrjwmd.s 			page 10


 413:.\Generated_Source\PSoC4/PWM_1.c ****     *
 414:.\Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 415:.\Generated_Source\PSoC4/PWM_1.c ****     *  This function returns the current value of the counter.  It doesn't matter
 416:.\Generated_Source\PSoC4/PWM_1.c ****     *  if the counter is enabled or running.
 417:.\Generated_Source\PSoC4/PWM_1.c ****     *
 418:.\Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 419:.\Generated_Source\PSoC4/PWM_1.c ****     *  None
 420:.\Generated_Source\PSoC4/PWM_1.c ****     *
 421:.\Generated_Source\PSoC4/PWM_1.c ****     * Return:
 422:.\Generated_Source\PSoC4/PWM_1.c ****     *  The current value of the counter.
 423:.\Generated_Source\PSoC4/PWM_1.c ****     *
 424:.\Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 425:.\Generated_Source\PSoC4/PWM_1.c ****     uint16 PWM_1_ReadCounter(void) 
 426:.\Generated_Source\PSoC4/PWM_1.c ****     {
 102              		.loc 1 426 0
 103              		.cfi_startproc
 427:.\Generated_Source\PSoC4/PWM_1.c ****         /* Force capture by reading Accumulator */
 428:.\Generated_Source\PSoC4/PWM_1.c ****         /* Must first do a software capture to be able to read the counter */
 429:.\Generated_Source\PSoC4/PWM_1.c ****         /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 430:.\Generated_Source\PSoC4/PWM_1.c ****           (void)CY_GET_REG8(PWM_1_COUNTERCAP_LSB_PTR_8BIT);
 104              		.loc 1 430 0
 105 0000 024B     		ldr	r3, .L11
 106 0002 1B78     		ldrb	r3, [r3]
 431:.\Generated_Source\PSoC4/PWM_1.c **** 
 432:.\Generated_Source\PSoC4/PWM_1.c ****         /* Read the data from the FIFO */
 433:.\Generated_Source\PSoC4/PWM_1.c ****         return (CY_GET_REG16(PWM_1_CAPTURE_LSB_PTR));
 107              		.loc 1 433 0
 108 0004 024B     		ldr	r3, .L11+4
 109 0006 1888     		ldrh	r0, [r3]
 110 0008 80B2     		uxth	r0, r0
 434:.\Generated_Source\PSoC4/PWM_1.c ****     }
 111              		.loc 1 434 0
 112              		@ sp needed
 113 000a 7047     		bx	lr
 114              	.L12:
 115              		.align	2
 116              	.L11:
 117 000c 10000F40 		.word	1074724880
 118 0010 A0100F40 		.word	1074729120
 119              		.cfi_endproc
 120              	.LFE7:
 121              		.size	PWM_1_ReadCounter, .-PWM_1_ReadCounter
 122              		.section	.text.PWM_1_WritePeriod,"ax",%progbits
 123              		.align	2
 124              		.global	PWM_1_WritePeriod
 125              		.code	16
 126              		.thumb_func
 127              		.type	PWM_1_WritePeriod, %function
 128              	PWM_1_WritePeriod:
 129              	.LFB9:
 435:.\Generated_Source\PSoC4/PWM_1.c **** 
 436:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_UseStatus)
 437:.\Generated_Source\PSoC4/PWM_1.c **** 
 438:.\Generated_Source\PSoC4/PWM_1.c **** 
 439:.\Generated_Source\PSoC4/PWM_1.c ****         /*******************************************************************************
 440:.\Generated_Source\PSoC4/PWM_1.c ****         * Function Name: PWM_1_ClearFIFO
 441:.\Generated_Source\PSoC4/PWM_1.c ****         ********************************************************************************
ARM GAS  C:\Users\Alec\AppData\Local\Temp\ccvrjwmd.s 			page 11


 442:.\Generated_Source\PSoC4/PWM_1.c ****         *
 443:.\Generated_Source\PSoC4/PWM_1.c ****         * Summary:
 444:.\Generated_Source\PSoC4/PWM_1.c ****         *  This function clears all capture data from the capture FIFO
 445:.\Generated_Source\PSoC4/PWM_1.c ****         *
 446:.\Generated_Source\PSoC4/PWM_1.c ****         * Parameters:
 447:.\Generated_Source\PSoC4/PWM_1.c ****         *  None
 448:.\Generated_Source\PSoC4/PWM_1.c ****         *
 449:.\Generated_Source\PSoC4/PWM_1.c ****         * Return:
 450:.\Generated_Source\PSoC4/PWM_1.c ****         *  None
 451:.\Generated_Source\PSoC4/PWM_1.c ****         *
 452:.\Generated_Source\PSoC4/PWM_1.c ****         *******************************************************************************/
 453:.\Generated_Source\PSoC4/PWM_1.c ****         void PWM_1_ClearFIFO(void) 
 454:.\Generated_Source\PSoC4/PWM_1.c ****         {
 455:.\Generated_Source\PSoC4/PWM_1.c ****             while(0u != (PWM_1_ReadStatusRegister() & PWM_1_STATUS_FIFONEMPTY))
 456:.\Generated_Source\PSoC4/PWM_1.c ****             {
 457:.\Generated_Source\PSoC4/PWM_1.c ****                 (void)PWM_1_ReadCapture();
 458:.\Generated_Source\PSoC4/PWM_1.c ****             }
 459:.\Generated_Source\PSoC4/PWM_1.c ****         }
 460:.\Generated_Source\PSoC4/PWM_1.c **** 
 461:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* PWM_1_UseStatus */
 462:.\Generated_Source\PSoC4/PWM_1.c **** 
 463:.\Generated_Source\PSoC4/PWM_1.c **** #endif /* !PWM_1_UsingFixedFunction */
 464:.\Generated_Source\PSoC4/PWM_1.c **** 
 465:.\Generated_Source\PSoC4/PWM_1.c **** 
 466:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 467:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_WritePeriod
 468:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 469:.\Generated_Source\PSoC4/PWM_1.c **** *
 470:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 471:.\Generated_Source\PSoC4/PWM_1.c **** *  This function is used to change the period of the counter.  The new period
 472:.\Generated_Source\PSoC4/PWM_1.c **** *  will be loaded the next time terminal count is detected.
 473:.\Generated_Source\PSoC4/PWM_1.c **** *
 474:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 475:.\Generated_Source\PSoC4/PWM_1.c **** *  period:  Period value. May be between 1 and (2^Resolution)-1.  A value of 0
 476:.\Generated_Source\PSoC4/PWM_1.c **** *           will result in the counter remaining at zero.
 477:.\Generated_Source\PSoC4/PWM_1.c **** *
 478:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 479:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 480:.\Generated_Source\PSoC4/PWM_1.c **** *
 481:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 482:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_WritePeriod(uint16 period) 
 483:.\Generated_Source\PSoC4/PWM_1.c **** {
 130              		.loc 1 483 0
 131              		.cfi_startproc
 132              	.LVL1:
 484:.\Generated_Source\PSoC4/PWM_1.c ****     #if(PWM_1_UsingFixedFunction)
 485:.\Generated_Source\PSoC4/PWM_1.c ****         CY_SET_REG16(PWM_1_PERIOD_LSB_PTR, (uint16)period);
 486:.\Generated_Source\PSoC4/PWM_1.c ****     #else
 487:.\Generated_Source\PSoC4/PWM_1.c ****         CY_SET_REG16(PWM_1_PERIOD_LSB_PTR, period);
 133              		.loc 1 487 0
 134 0000 014B     		ldr	r3, .L14
 135 0002 1880     		strh	r0, [r3]
 488:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 489:.\Generated_Source\PSoC4/PWM_1.c **** }
 136              		.loc 1 489 0
 137              		@ sp needed
 138 0004 7047     		bx	lr
ARM GAS  C:\Users\Alec\AppData\Local\Temp\ccvrjwmd.s 			page 12


 139              	.L15:
 140 0006 C046     		.align	2
 141              	.L14:
 142 0008 80100F40 		.word	1074729088
 143              		.cfi_endproc
 144              	.LFE9:
 145              		.size	PWM_1_WritePeriod, .-PWM_1_WritePeriod
 146              		.section	.text.PWM_1_WriteCompare,"ax",%progbits
 147              		.align	2
 148              		.global	PWM_1_WriteCompare
 149              		.code	16
 150              		.thumb_func
 151              		.type	PWM_1_WriteCompare, %function
 152              	PWM_1_WriteCompare:
 153              	.LFB10:
 490:.\Generated_Source\PSoC4/PWM_1.c **** 
 491:.\Generated_Source\PSoC4/PWM_1.c **** #if (PWM_1_UseOneCompareMode)
 492:.\Generated_Source\PSoC4/PWM_1.c **** 
 493:.\Generated_Source\PSoC4/PWM_1.c **** 
 494:.\Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 495:.\Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_WriteCompare
 496:.\Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 497:.\Generated_Source\PSoC4/PWM_1.c ****     *
 498:.\Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 499:.\Generated_Source\PSoC4/PWM_1.c ****     *  This funtion is used to change the compare1 value when the PWM is in Dither
 500:.\Generated_Source\PSoC4/PWM_1.c ****     *  mode. The compare output will reflect the new value on the next UDB clock.
 501:.\Generated_Source\PSoC4/PWM_1.c ****     *  The compare output will be driven high when the present counter value is
 502:.\Generated_Source\PSoC4/PWM_1.c ****     *  compared to the compare value based on the compare mode defined in
 503:.\Generated_Source\PSoC4/PWM_1.c ****     *  Dither Mode.
 504:.\Generated_Source\PSoC4/PWM_1.c ****     *
 505:.\Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 506:.\Generated_Source\PSoC4/PWM_1.c ****     *  compare:  New compare value.
 507:.\Generated_Source\PSoC4/PWM_1.c ****     *
 508:.\Generated_Source\PSoC4/PWM_1.c ****     * Return:
 509:.\Generated_Source\PSoC4/PWM_1.c ****     *  None
 510:.\Generated_Source\PSoC4/PWM_1.c ****     *
 511:.\Generated_Source\PSoC4/PWM_1.c ****     * Side Effects:
 512:.\Generated_Source\PSoC4/PWM_1.c ****     *  This function is only available if the PWM mode parameter is set to
 513:.\Generated_Source\PSoC4/PWM_1.c ****     *  Dither Mode, Center Aligned Mode or One Output Mode
 514:.\Generated_Source\PSoC4/PWM_1.c ****     *
 515:.\Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 516:.\Generated_Source\PSoC4/PWM_1.c ****     void PWM_1_WriteCompare(uint16 compare) \
 517:.\Generated_Source\PSoC4/PWM_1.c ****                                        
 518:.\Generated_Source\PSoC4/PWM_1.c ****     {
 154              		.loc 1 518 0
 155              		.cfi_startproc
 156              	.LVL2:
 519:.\Generated_Source\PSoC4/PWM_1.c ****         #if(PWM_1_UsingFixedFunction)
 520:.\Generated_Source\PSoC4/PWM_1.c ****             CY_SET_REG16(PWM_1_COMPARE1_LSB_PTR, (uint16)compare);
 521:.\Generated_Source\PSoC4/PWM_1.c ****         #else
 522:.\Generated_Source\PSoC4/PWM_1.c ****             CY_SET_REG16(PWM_1_COMPARE1_LSB_PTR, compare);
 157              		.loc 1 522 0
 158 0000 014B     		ldr	r3, .L17
 159 0002 1880     		strh	r0, [r3]
 523:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_UsingFixedFunction) */
 524:.\Generated_Source\PSoC4/PWM_1.c **** 
 525:.\Generated_Source\PSoC4/PWM_1.c ****         #if (PWM_1_PWMMode == PWM_1__B_PWM__DITHER)
ARM GAS  C:\Users\Alec\AppData\Local\Temp\ccvrjwmd.s 			page 13


 526:.\Generated_Source\PSoC4/PWM_1.c ****             #if(PWM_1_UsingFixedFunction)
 527:.\Generated_Source\PSoC4/PWM_1.c ****                 CY_SET_REG16(PWM_1_COMPARE2_LSB_PTR, (uint16)(compare + 1u));
 528:.\Generated_Source\PSoC4/PWM_1.c ****             #else
 529:.\Generated_Source\PSoC4/PWM_1.c ****                 CY_SET_REG16(PWM_1_COMPARE2_LSB_PTR, (compare + 1u));
 530:.\Generated_Source\PSoC4/PWM_1.c ****             #endif /* (PWM_1_UsingFixedFunction) */
 531:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_PWMMode == PWM_1__B_PWM__DITHER) */
 532:.\Generated_Source\PSoC4/PWM_1.c ****     }
 160              		.loc 1 532 0
 161              		@ sp needed
 162 0004 7047     		bx	lr
 163              	.L18:
 164 0006 C046     		.align	2
 165              	.L17:
 166 0008 40100F40 		.word	1074729024
 167              		.cfi_endproc
 168              	.LFE10:
 169              		.size	PWM_1_WriteCompare, .-PWM_1_WriteCompare
 170              		.section	.text.PWM_1_SetInterruptMode,"ax",%progbits
 171              		.align	2
 172              		.global	PWM_1_SetInterruptMode
 173              		.code	16
 174              		.thumb_func
 175              		.type	PWM_1_SetInterruptMode, %function
 176              	PWM_1_SetInterruptMode:
 177              	.LFB11:
 533:.\Generated_Source\PSoC4/PWM_1.c **** 
 534:.\Generated_Source\PSoC4/PWM_1.c **** 
 535:.\Generated_Source\PSoC4/PWM_1.c **** #else
 536:.\Generated_Source\PSoC4/PWM_1.c **** 
 537:.\Generated_Source\PSoC4/PWM_1.c **** 
 538:.\Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 539:.\Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_WriteCompare1
 540:.\Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 541:.\Generated_Source\PSoC4/PWM_1.c ****     *
 542:.\Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 543:.\Generated_Source\PSoC4/PWM_1.c ****     *  This funtion is used to change the compare1 value.  The compare output will
 544:.\Generated_Source\PSoC4/PWM_1.c ****     *  reflect the new value on the next UDB clock.  The compare output will be
 545:.\Generated_Source\PSoC4/PWM_1.c ****     *  driven high when the present counter value is less than or less than or
 546:.\Generated_Source\PSoC4/PWM_1.c ****     *  equal to the compare register, depending on the mode.
 547:.\Generated_Source\PSoC4/PWM_1.c ****     *
 548:.\Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 549:.\Generated_Source\PSoC4/PWM_1.c ****     *  compare:  New compare value.
 550:.\Generated_Source\PSoC4/PWM_1.c ****     *
 551:.\Generated_Source\PSoC4/PWM_1.c ****     * Return:
 552:.\Generated_Source\PSoC4/PWM_1.c ****     *  None
 553:.\Generated_Source\PSoC4/PWM_1.c ****     *
 554:.\Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 555:.\Generated_Source\PSoC4/PWM_1.c ****     void PWM_1_WriteCompare1(uint16 compare) \
 556:.\Generated_Source\PSoC4/PWM_1.c ****                                         
 557:.\Generated_Source\PSoC4/PWM_1.c ****     {
 558:.\Generated_Source\PSoC4/PWM_1.c ****         #if(PWM_1_UsingFixedFunction)
 559:.\Generated_Source\PSoC4/PWM_1.c ****             CY_SET_REG16(PWM_1_COMPARE1_LSB_PTR, (uint16)compare);
 560:.\Generated_Source\PSoC4/PWM_1.c ****         #else
 561:.\Generated_Source\PSoC4/PWM_1.c ****             CY_SET_REG16(PWM_1_COMPARE1_LSB_PTR, compare);
 562:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_UsingFixedFunction) */
 563:.\Generated_Source\PSoC4/PWM_1.c ****     }
 564:.\Generated_Source\PSoC4/PWM_1.c **** 
ARM GAS  C:\Users\Alec\AppData\Local\Temp\ccvrjwmd.s 			page 14


 565:.\Generated_Source\PSoC4/PWM_1.c **** 
 566:.\Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 567:.\Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_WriteCompare2
 568:.\Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 569:.\Generated_Source\PSoC4/PWM_1.c ****     *
 570:.\Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 571:.\Generated_Source\PSoC4/PWM_1.c ****     *  This funtion is used to change the compare value, for compare1 output.
 572:.\Generated_Source\PSoC4/PWM_1.c ****     *  The compare output will reflect the new value on the next UDB clock.
 573:.\Generated_Source\PSoC4/PWM_1.c ****     *  The compare output will be driven high when the present counter value is
 574:.\Generated_Source\PSoC4/PWM_1.c ****     *  less than or less than or equal to the compare register, depending on the
 575:.\Generated_Source\PSoC4/PWM_1.c ****     *  mode.
 576:.\Generated_Source\PSoC4/PWM_1.c ****     *
 577:.\Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 578:.\Generated_Source\PSoC4/PWM_1.c ****     *  compare:  New compare value.
 579:.\Generated_Source\PSoC4/PWM_1.c ****     *
 580:.\Generated_Source\PSoC4/PWM_1.c ****     * Return:
 581:.\Generated_Source\PSoC4/PWM_1.c ****     *  None
 582:.\Generated_Source\PSoC4/PWM_1.c ****     *
 583:.\Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 584:.\Generated_Source\PSoC4/PWM_1.c ****     void PWM_1_WriteCompare2(uint16 compare) \
 585:.\Generated_Source\PSoC4/PWM_1.c ****                                         
 586:.\Generated_Source\PSoC4/PWM_1.c ****     {
 587:.\Generated_Source\PSoC4/PWM_1.c ****         #if(PWM_1_UsingFixedFunction)
 588:.\Generated_Source\PSoC4/PWM_1.c ****             CY_SET_REG16(PWM_1_COMPARE2_LSB_PTR, compare);
 589:.\Generated_Source\PSoC4/PWM_1.c ****         #else
 590:.\Generated_Source\PSoC4/PWM_1.c ****             CY_SET_REG16(PWM_1_COMPARE2_LSB_PTR, compare);
 591:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_UsingFixedFunction) */
 592:.\Generated_Source\PSoC4/PWM_1.c ****     }
 593:.\Generated_Source\PSoC4/PWM_1.c **** #endif /* UseOneCompareMode */
 594:.\Generated_Source\PSoC4/PWM_1.c **** 
 595:.\Generated_Source\PSoC4/PWM_1.c **** #if (PWM_1_DeadBandUsed)
 596:.\Generated_Source\PSoC4/PWM_1.c **** 
 597:.\Generated_Source\PSoC4/PWM_1.c **** 
 598:.\Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 599:.\Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_WriteDeadTime
 600:.\Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 601:.\Generated_Source\PSoC4/PWM_1.c ****     *
 602:.\Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 603:.\Generated_Source\PSoC4/PWM_1.c ****     *  This function writes the dead-band counts to the corresponding register
 604:.\Generated_Source\PSoC4/PWM_1.c ****     *
 605:.\Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 606:.\Generated_Source\PSoC4/PWM_1.c ****     *  deadtime:  Number of counts for dead time
 607:.\Generated_Source\PSoC4/PWM_1.c ****     *
 608:.\Generated_Source\PSoC4/PWM_1.c ****     * Return:
 609:.\Generated_Source\PSoC4/PWM_1.c ****     *  None
 610:.\Generated_Source\PSoC4/PWM_1.c ****     *
 611:.\Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 612:.\Generated_Source\PSoC4/PWM_1.c ****     void PWM_1_WriteDeadTime(uint8 deadtime) 
 613:.\Generated_Source\PSoC4/PWM_1.c ****     {
 614:.\Generated_Source\PSoC4/PWM_1.c ****         /* If using the Dead Band 1-255 mode then just write the register */
 615:.\Generated_Source\PSoC4/PWM_1.c ****         #if(!PWM_1_DeadBand2_4)
 616:.\Generated_Source\PSoC4/PWM_1.c ****             CY_SET_REG8(PWM_1_DEADBAND_COUNT_PTR, deadtime);
 617:.\Generated_Source\PSoC4/PWM_1.c ****         #else
 618:.\Generated_Source\PSoC4/PWM_1.c ****             /* Otherwise the data has to be masked and offset */
 619:.\Generated_Source\PSoC4/PWM_1.c ****             /* Clear existing data */
 620:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_DEADBAND_COUNT &= ((uint8)(~PWM_1_DEADBAND_COUNT_MASK));
 621:.\Generated_Source\PSoC4/PWM_1.c **** 
ARM GAS  C:\Users\Alec\AppData\Local\Temp\ccvrjwmd.s 			page 15


 622:.\Generated_Source\PSoC4/PWM_1.c ****             /* Set new dead time */
 623:.\Generated_Source\PSoC4/PWM_1.c ****             #if(PWM_1_DEADBAND_COUNT_SHIFT)
 624:.\Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_DEADBAND_COUNT |= ((uint8)((uint8)deadtime << PWM_1_DEADBAND_COUNT_SHIFT)) &
 625:.\Generated_Source\PSoC4/PWM_1.c ****                                                     PWM_1_DEADBAND_COUNT_MASK;
 626:.\Generated_Source\PSoC4/PWM_1.c ****             #else
 627:.\Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_DEADBAND_COUNT |= deadtime & PWM_1_DEADBAND_COUNT_MASK;
 628:.\Generated_Source\PSoC4/PWM_1.c ****             #endif /* (PWM_1_DEADBAND_COUNT_SHIFT) */
 629:.\Generated_Source\PSoC4/PWM_1.c **** 
 630:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (!PWM_1_DeadBand2_4) */
 631:.\Generated_Source\PSoC4/PWM_1.c ****     }
 632:.\Generated_Source\PSoC4/PWM_1.c **** 
 633:.\Generated_Source\PSoC4/PWM_1.c **** 
 634:.\Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 635:.\Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_ReadDeadTime
 636:.\Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 637:.\Generated_Source\PSoC4/PWM_1.c ****     *
 638:.\Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 639:.\Generated_Source\PSoC4/PWM_1.c ****     *  This function reads the dead-band counts from the corresponding register
 640:.\Generated_Source\PSoC4/PWM_1.c ****     *
 641:.\Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 642:.\Generated_Source\PSoC4/PWM_1.c ****     *  None
 643:.\Generated_Source\PSoC4/PWM_1.c ****     *
 644:.\Generated_Source\PSoC4/PWM_1.c ****     * Return:
 645:.\Generated_Source\PSoC4/PWM_1.c ****     *  Dead Band Counts
 646:.\Generated_Source\PSoC4/PWM_1.c ****     *
 647:.\Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 648:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 PWM_1_ReadDeadTime(void) 
 649:.\Generated_Source\PSoC4/PWM_1.c ****     {
 650:.\Generated_Source\PSoC4/PWM_1.c ****         /* If using the Dead Band 1-255 mode then just read the register */
 651:.\Generated_Source\PSoC4/PWM_1.c ****         #if(!PWM_1_DeadBand2_4)
 652:.\Generated_Source\PSoC4/PWM_1.c ****             return (CY_GET_REG8(PWM_1_DEADBAND_COUNT_PTR));
 653:.\Generated_Source\PSoC4/PWM_1.c ****         #else
 654:.\Generated_Source\PSoC4/PWM_1.c **** 
 655:.\Generated_Source\PSoC4/PWM_1.c ****             /* Otherwise the data has to be masked and offset */
 656:.\Generated_Source\PSoC4/PWM_1.c ****             #if(PWM_1_DEADBAND_COUNT_SHIFT)
 657:.\Generated_Source\PSoC4/PWM_1.c ****                 return ((uint8)(((uint8)(PWM_1_DEADBAND_COUNT & PWM_1_DEADBAND_COUNT_MASK)) >>
 658:.\Generated_Source\PSoC4/PWM_1.c ****                                                                            PWM_1_DEADBAND_COUNT_SHI
 659:.\Generated_Source\PSoC4/PWM_1.c ****             #else
 660:.\Generated_Source\PSoC4/PWM_1.c ****                 return (PWM_1_DEADBAND_COUNT & PWM_1_DEADBAND_COUNT_MASK);
 661:.\Generated_Source\PSoC4/PWM_1.c ****             #endif /* (PWM_1_DEADBAND_COUNT_SHIFT) */
 662:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (!PWM_1_DeadBand2_4) */
 663:.\Generated_Source\PSoC4/PWM_1.c ****     }
 664:.\Generated_Source\PSoC4/PWM_1.c **** #endif /* DeadBandUsed */
 665:.\Generated_Source\PSoC4/PWM_1.c **** 
 666:.\Generated_Source\PSoC4/PWM_1.c **** #if (PWM_1_UseStatus || PWM_1_UsingFixedFunction)
 667:.\Generated_Source\PSoC4/PWM_1.c **** 
 668:.\Generated_Source\PSoC4/PWM_1.c **** 
 669:.\Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 670:.\Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_SetInterruptMode
 671:.\Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 672:.\Generated_Source\PSoC4/PWM_1.c ****     *
 673:.\Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 674:.\Generated_Source\PSoC4/PWM_1.c ****     *  This function configures the interrupts mask control of theinterrupt
 675:.\Generated_Source\PSoC4/PWM_1.c ****     *  source status register.
 676:.\Generated_Source\PSoC4/PWM_1.c ****     *
 677:.\Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 678:.\Generated_Source\PSoC4/PWM_1.c ****     *  uint8 interruptMode: Bit field containing the interrupt sources enabled
ARM GAS  C:\Users\Alec\AppData\Local\Temp\ccvrjwmd.s 			page 16


 679:.\Generated_Source\PSoC4/PWM_1.c ****     *
 680:.\Generated_Source\PSoC4/PWM_1.c ****     * Return:
 681:.\Generated_Source\PSoC4/PWM_1.c ****     *  None
 682:.\Generated_Source\PSoC4/PWM_1.c ****     *
 683:.\Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 684:.\Generated_Source\PSoC4/PWM_1.c ****     void PWM_1_SetInterruptMode(uint8 interruptMode) 
 685:.\Generated_Source\PSoC4/PWM_1.c ****     {
 178              		.loc 1 685 0
 179              		.cfi_startproc
 180              	.LVL3:
 686:.\Generated_Source\PSoC4/PWM_1.c ****         CY_SET_REG8(PWM_1_STATUS_MASK_PTR, interruptMode);
 181              		.loc 1 686 0
 182 0000 014B     		ldr	r3, .L20
 183 0002 1870     		strb	r0, [r3]
 687:.\Generated_Source\PSoC4/PWM_1.c ****     }
 184              		.loc 1 687 0
 185              		@ sp needed
 186 0004 7047     		bx	lr
 187              	.L21:
 188 0006 C046     		.align	2
 189              	.L20:
 190 0008 81000F40 		.word	1074724993
 191              		.cfi_endproc
 192              	.LFE11:
 193              		.size	PWM_1_SetInterruptMode, .-PWM_1_SetInterruptMode
 194              		.section	.text.PWM_1_ReadStatusRegister,"ax",%progbits
 195              		.align	2
 196              		.global	PWM_1_ReadStatusRegister
 197              		.code	16
 198              		.thumb_func
 199              		.type	PWM_1_ReadStatusRegister, %function
 200              	PWM_1_ReadStatusRegister:
 201              	.LFB12:
 688:.\Generated_Source\PSoC4/PWM_1.c **** 
 689:.\Generated_Source\PSoC4/PWM_1.c **** 
 690:.\Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 691:.\Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_ReadStatusRegister
 692:.\Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 693:.\Generated_Source\PSoC4/PWM_1.c ****     *
 694:.\Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 695:.\Generated_Source\PSoC4/PWM_1.c ****     *  This function returns the current state of the status register.
 696:.\Generated_Source\PSoC4/PWM_1.c ****     *
 697:.\Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 698:.\Generated_Source\PSoC4/PWM_1.c ****     *  None
 699:.\Generated_Source\PSoC4/PWM_1.c ****     *
 700:.\Generated_Source\PSoC4/PWM_1.c ****     * Return:
 701:.\Generated_Source\PSoC4/PWM_1.c ****     *  uint8 : Current status register value. The status register bits are:
 702:.\Generated_Source\PSoC4/PWM_1.c ****     *  [7:6] : Unused(0)
 703:.\Generated_Source\PSoC4/PWM_1.c ****     *  [5]   : Kill event output
 704:.\Generated_Source\PSoC4/PWM_1.c ****     *  [4]   : FIFO not empty
 705:.\Generated_Source\PSoC4/PWM_1.c ****     *  [3]   : FIFO full
 706:.\Generated_Source\PSoC4/PWM_1.c ****     *  [2]   : Terminal count
 707:.\Generated_Source\PSoC4/PWM_1.c ****     *  [1]   : Compare output 2
 708:.\Generated_Source\PSoC4/PWM_1.c ****     *  [0]   : Compare output 1
 709:.\Generated_Source\PSoC4/PWM_1.c ****     *
 710:.\Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 711:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 PWM_1_ReadStatusRegister(void) 
ARM GAS  C:\Users\Alec\AppData\Local\Temp\ccvrjwmd.s 			page 17


 712:.\Generated_Source\PSoC4/PWM_1.c ****     {
 202              		.loc 1 712 0
 203              		.cfi_startproc
 713:.\Generated_Source\PSoC4/PWM_1.c ****         return (CY_GET_REG8(PWM_1_STATUS_PTR));
 204              		.loc 1 713 0
 205 0000 014B     		ldr	r3, .L23
 206 0002 1878     		ldrb	r0, [r3]
 207 0004 C0B2     		uxtb	r0, r0
 714:.\Generated_Source\PSoC4/PWM_1.c ****     }
 208              		.loc 1 714 0
 209              		@ sp needed
 210 0006 7047     		bx	lr
 211              	.L24:
 212              		.align	2
 213              	.L23:
 214 0008 61000F40 		.word	1074724961
 215              		.cfi_endproc
 216              	.LFE12:
 217              		.size	PWM_1_ReadStatusRegister, .-PWM_1_ReadStatusRegister
 218              		.section	.text.PWM_1_ReadControlRegister,"ax",%progbits
 219              		.align	2
 220              		.global	PWM_1_ReadControlRegister
 221              		.code	16
 222              		.thumb_func
 223              		.type	PWM_1_ReadControlRegister, %function
 224              	PWM_1_ReadControlRegister:
 225              	.LFB13:
 715:.\Generated_Source\PSoC4/PWM_1.c **** 
 716:.\Generated_Source\PSoC4/PWM_1.c **** #endif /* (PWM_1_UseStatus || PWM_1_UsingFixedFunction) */
 717:.\Generated_Source\PSoC4/PWM_1.c **** 
 718:.\Generated_Source\PSoC4/PWM_1.c **** 
 719:.\Generated_Source\PSoC4/PWM_1.c **** #if (PWM_1_UseControl)
 720:.\Generated_Source\PSoC4/PWM_1.c **** 
 721:.\Generated_Source\PSoC4/PWM_1.c **** 
 722:.\Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 723:.\Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_ReadControlRegister
 724:.\Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 725:.\Generated_Source\PSoC4/PWM_1.c ****     *
 726:.\Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 727:.\Generated_Source\PSoC4/PWM_1.c ****     *  Returns the current state of the control register. This API is available
 728:.\Generated_Source\PSoC4/PWM_1.c ****     *  only if the control register is not removed.
 729:.\Generated_Source\PSoC4/PWM_1.c ****     *
 730:.\Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 731:.\Generated_Source\PSoC4/PWM_1.c ****     *  None
 732:.\Generated_Source\PSoC4/PWM_1.c ****     *
 733:.\Generated_Source\PSoC4/PWM_1.c ****     * Return:
 734:.\Generated_Source\PSoC4/PWM_1.c ****     *  uint8 : Current control register value
 735:.\Generated_Source\PSoC4/PWM_1.c ****     *
 736:.\Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 737:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 PWM_1_ReadControlRegister(void) 
 738:.\Generated_Source\PSoC4/PWM_1.c ****     {
 226              		.loc 1 738 0
 227              		.cfi_startproc
 739:.\Generated_Source\PSoC4/PWM_1.c ****         uint8 result;
 740:.\Generated_Source\PSoC4/PWM_1.c **** 
 741:.\Generated_Source\PSoC4/PWM_1.c ****         result = CY_GET_REG8(PWM_1_CONTROL_PTR);
 228              		.loc 1 741 0
ARM GAS  C:\Users\Alec\AppData\Local\Temp\ccvrjwmd.s 			page 18


 229 0000 014B     		ldr	r3, .L26
 230 0002 1878     		ldrb	r0, [r3]
 231 0004 C0B2     		uxtb	r0, r0
 232              	.LVL4:
 742:.\Generated_Source\PSoC4/PWM_1.c ****         return (result);
 743:.\Generated_Source\PSoC4/PWM_1.c ****     }
 233              		.loc 1 743 0
 234              		@ sp needed
 235 0006 7047     		bx	lr
 236              	.L27:
 237              		.align	2
 238              	.L26:
 239 0008 71000F40 		.word	1074724977
 240              		.cfi_endproc
 241              	.LFE13:
 242              		.size	PWM_1_ReadControlRegister, .-PWM_1_ReadControlRegister
 243              		.section	.text.PWM_1_WriteControlRegister,"ax",%progbits
 244              		.align	2
 245              		.global	PWM_1_WriteControlRegister
 246              		.code	16
 247              		.thumb_func
 248              		.type	PWM_1_WriteControlRegister, %function
 249              	PWM_1_WriteControlRegister:
 250              	.LFB14:
 744:.\Generated_Source\PSoC4/PWM_1.c **** 
 745:.\Generated_Source\PSoC4/PWM_1.c **** 
 746:.\Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 747:.\Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_WriteControlRegister
 748:.\Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 749:.\Generated_Source\PSoC4/PWM_1.c ****     *
 750:.\Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 751:.\Generated_Source\PSoC4/PWM_1.c ****     *  Sets the bit field of the control register. This API is available only if
 752:.\Generated_Source\PSoC4/PWM_1.c ****     *  the control register is not removed.
 753:.\Generated_Source\PSoC4/PWM_1.c ****     *
 754:.\Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 755:.\Generated_Source\PSoC4/PWM_1.c ****     *  uint8 control: Control register bit field, The status register bits are:
 756:.\Generated_Source\PSoC4/PWM_1.c ****     *  [7]   : PWM Enable
 757:.\Generated_Source\PSoC4/PWM_1.c ****     *  [6]   : Reset
 758:.\Generated_Source\PSoC4/PWM_1.c ****     *  [5:3] : Compare Mode2
 759:.\Generated_Source\PSoC4/PWM_1.c ****     *  [2:0] : Compare Mode2
 760:.\Generated_Source\PSoC4/PWM_1.c ****     *
 761:.\Generated_Source\PSoC4/PWM_1.c ****     * Return:
 762:.\Generated_Source\PSoC4/PWM_1.c ****     *  None
 763:.\Generated_Source\PSoC4/PWM_1.c ****     *
 764:.\Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 765:.\Generated_Source\PSoC4/PWM_1.c ****     void PWM_1_WriteControlRegister(uint8 control) 
 766:.\Generated_Source\PSoC4/PWM_1.c ****     {
 251              		.loc 1 766 0
 252              		.cfi_startproc
 253              	.LVL5:
 767:.\Generated_Source\PSoC4/PWM_1.c ****         CY_SET_REG8(PWM_1_CONTROL_PTR, control);
 254              		.loc 1 767 0
 255 0000 014B     		ldr	r3, .L29
 256 0002 1870     		strb	r0, [r3]
 768:.\Generated_Source\PSoC4/PWM_1.c ****     }
 257              		.loc 1 768 0
 258              		@ sp needed
ARM GAS  C:\Users\Alec\AppData\Local\Temp\ccvrjwmd.s 			page 19


 259 0004 7047     		bx	lr
 260              	.L30:
 261 0006 C046     		.align	2
 262              	.L29:
 263 0008 71000F40 		.word	1074724977
 264              		.cfi_endproc
 265              	.LFE14:
 266              		.size	PWM_1_WriteControlRegister, .-PWM_1_WriteControlRegister
 267              		.section	.text.PWM_1_ReadCapture,"ax",%progbits
 268              		.align	2
 269              		.global	PWM_1_ReadCapture
 270              		.code	16
 271              		.thumb_func
 272              		.type	PWM_1_ReadCapture, %function
 273              	PWM_1_ReadCapture:
 274              	.LFB15:
 769:.\Generated_Source\PSoC4/PWM_1.c **** 
 770:.\Generated_Source\PSoC4/PWM_1.c **** #endif /* (PWM_1_UseControl) */
 771:.\Generated_Source\PSoC4/PWM_1.c **** 
 772:.\Generated_Source\PSoC4/PWM_1.c **** 
 773:.\Generated_Source\PSoC4/PWM_1.c **** #if (!PWM_1_UsingFixedFunction)
 774:.\Generated_Source\PSoC4/PWM_1.c **** 
 775:.\Generated_Source\PSoC4/PWM_1.c **** 
 776:.\Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 777:.\Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_ReadCapture
 778:.\Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 779:.\Generated_Source\PSoC4/PWM_1.c ****     *
 780:.\Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 781:.\Generated_Source\PSoC4/PWM_1.c ****     *  Reads the capture value from the capture FIFO.
 782:.\Generated_Source\PSoC4/PWM_1.c ****     *
 783:.\Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 784:.\Generated_Source\PSoC4/PWM_1.c ****     *  None
 785:.\Generated_Source\PSoC4/PWM_1.c ****     *
 786:.\Generated_Source\PSoC4/PWM_1.c ****     * Return:
 787:.\Generated_Source\PSoC4/PWM_1.c ****     *  uint8/uint16: The current capture value
 788:.\Generated_Source\PSoC4/PWM_1.c ****     *
 789:.\Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 790:.\Generated_Source\PSoC4/PWM_1.c ****     uint16 PWM_1_ReadCapture(void) 
 791:.\Generated_Source\PSoC4/PWM_1.c ****     {
 275              		.loc 1 791 0
 276              		.cfi_startproc
 792:.\Generated_Source\PSoC4/PWM_1.c ****         return (CY_GET_REG16(PWM_1_CAPTURE_LSB_PTR));
 277              		.loc 1 792 0
 278 0000 014B     		ldr	r3, .L32
 279 0002 1888     		ldrh	r0, [r3]
 280 0004 80B2     		uxth	r0, r0
 793:.\Generated_Source\PSoC4/PWM_1.c ****     }
 281              		.loc 1 793 0
 282              		@ sp needed
 283 0006 7047     		bx	lr
 284              	.L33:
 285              		.align	2
 286              	.L32:
 287 0008 A0100F40 		.word	1074729120
 288              		.cfi_endproc
 289              	.LFE15:
 290              		.size	PWM_1_ReadCapture, .-PWM_1_ReadCapture
ARM GAS  C:\Users\Alec\AppData\Local\Temp\ccvrjwmd.s 			page 20


 291              		.section	.text.PWM_1_ClearFIFO,"ax",%progbits
 292              		.align	2
 293              		.global	PWM_1_ClearFIFO
 294              		.code	16
 295              		.thumb_func
 296              		.type	PWM_1_ClearFIFO, %function
 297              	PWM_1_ClearFIFO:
 298              	.LFB8:
 454:.\Generated_Source\PSoC4/PWM_1.c ****             while(0u != (PWM_1_ReadStatusRegister() & PWM_1_STATUS_FIFONEMPTY))
 299              		.loc 1 454 0
 300              		.cfi_startproc
 301 0000 08B5     		push	{r3, lr}
 302              		.cfi_def_cfa_offset 8
 303              		.cfi_offset 3, -8
 304              		.cfi_offset 14, -4
 455:.\Generated_Source\PSoC4/PWM_1.c ****             {
 305              		.loc 1 455 0
 306 0002 01E0     		b	.L35
 307              	.L36:
 457:.\Generated_Source\PSoC4/PWM_1.c ****             }
 308              		.loc 1 457 0
 309 0004 FFF7FEFF 		bl	PWM_1_ReadCapture
 310              	.LVL6:
 311              	.L35:
 455:.\Generated_Source\PSoC4/PWM_1.c ****             {
 312              		.loc 1 455 0
 313 0008 FFF7FEFF 		bl	PWM_1_ReadStatusRegister
 314              	.LVL7:
 315 000c C306     		lsl	r3, r0, #27
 316 000e F9D4     		bmi	.L36
 459:.\Generated_Source\PSoC4/PWM_1.c **** 
 317              		.loc 1 459 0
 318              		@ sp needed
 319 0010 08BD     		pop	{r3, pc}
 320              		.cfi_endproc
 321              	.LFE8:
 322              		.size	PWM_1_ClearFIFO, .-PWM_1_ClearFIFO
 323 0012 C046     		.section	.text.PWM_1_Init,"ax",%progbits
 324              		.align	2
 325              		.global	PWM_1_Init
 326              		.code	16
 327              		.thumb_func
 328              		.type	PWM_1_Init, %function
 329              	PWM_1_Init:
 330              	.LFB3:
  85:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_UsingFixedFunction || PWM_1_UseControl)
 331              		.loc 1 85 0
 332              		.cfi_startproc
 333 0000 38B5     		push	{r3, r4, r5, lr}
 334              		.cfi_def_cfa_offset 16
 335              		.cfi_offset 3, -16
 336              		.cfi_offset 4, -12
 337              		.cfi_offset 5, -8
 338              		.cfi_offset 14, -4
 117:.\Generated_Source\PSoC4/PWM_1.c ****                 ((uint8)(~PWM_1_CTRL_CMPMODE1_MASK));
 339              		.loc 1 117 0
 340 0002 1549     		ldr	r1, .L38
ARM GAS  C:\Users\Alec\AppData\Local\Temp\ccvrjwmd.s 			page 21


 341 0004 0B78     		ldrb	r3, [r1]
 342 0006 3F22     		mov	r2, #63
 343 0008 9343     		bic	r3, r2
 344              	.LVL8:
 119:.\Generated_Source\PSoC4/PWM_1.c ****                                    PWM_1_DEFAULT_COMPARE1_MODE;
 345              		.loc 1 119 0
 346 000a 363A     		sub	r2, r2, #54
 347 000c 1343     		orr	r3, r2
 348              	.LVL9:
 349 000e 0B70     		strb	r3, [r1]
 129:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_AUX_CONTROLDP1 |= (PWM_1_AUX_CTRL_FIFO0_CLR);
 350              		.loc 1 129 0
 351 0010 1249     		ldr	r1, .L38+4
 352 0012 0A78     		ldrb	r2, [r1]
 353 0014 0123     		mov	r3, #1
 354 0016 1A43     		orr	r2, r3
 355 0018 D2B2     		uxtb	r2, r2
 356 001a 0A70     		strb	r2, [r1]
 130:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_Resolution == 8) */
 357              		.loc 1 130 0
 358 001c 104C     		ldr	r4, .L38+8
 359 001e 2278     		ldrb	r2, [r4]
 360 0020 1343     		orr	r3, r2
 361 0022 DBB2     		uxtb	r3, r3
 362 0024 2370     		strb	r3, [r4]
 133:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (!PWM_1_UsingFixedFunction) */
 363              		.loc 1 133 0
 364 0026 0F4D     		ldr	r5, .L38+12
 365 0028 281C     		mov	r0, r5
 366 002a FFF7FEFF 		bl	PWM_1_WriteCounter
 367              	.LVL10:
 136:.\Generated_Source\PSoC4/PWM_1.c **** 
 368              		.loc 1 136 0
 369 002e 281C     		mov	r0, r5
 370 0030 FFF7FEFF 		bl	PWM_1_WritePeriod
 371              	.LVL11:
 139:.\Generated_Source\PSoC4/PWM_1.c ****         #else
 372              		.loc 1 139 0
 373 0034 7F20     		mov	r0, #127
 374 0036 FFF7FEFF 		bl	PWM_1_WriteCompare
 375              	.LVL12:
 154:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_UseStatus || PWM_1_UsingFixedFunction) */
 376              		.loc 1 154 0
 377 003a 0020     		mov	r0, #0
 378 003c FFF7FEFF 		bl	PWM_1_SetInterruptMode
 379              	.LVL13:
 167:.\Generated_Source\PSoC4/PWM_1.c ****             /* Use the interrupt output of the status register for IRQ output */
 380              		.loc 1 167 0
 381 0040 FFF7FEFF 		bl	CyEnterCriticalSection
 382              	.LVL14:
 169:.\Generated_Source\PSoC4/PWM_1.c **** 
 383              		.loc 1 169 0
 384 0044 2278     		ldrb	r2, [r4]
 385 0046 1023     		mov	r3, #16
 386 0048 1343     		orr	r3, r2
 387 004a 2370     		strb	r3, [r4]
 172:.\Generated_Source\PSoC4/PWM_1.c **** 
ARM GAS  C:\Users\Alec\AppData\Local\Temp\ccvrjwmd.s 			page 22


 388              		.loc 1 172 0
 389 004c FFF7FEFF 		bl	CyExitCriticalSection
 390              	.LVL15:
 176:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_UseStatus) */
 391              		.loc 1 176 0
 392 0050 FFF7FEFF 		bl	PWM_1_ClearFIFO
 393              	.LVL16:
 179:.\Generated_Source\PSoC4/PWM_1.c **** 
 394              		.loc 1 179 0
 395              		@ sp needed
 396 0054 38BD     		pop	{r3, r4, r5, pc}
 397              	.L39:
 398 0056 C046     		.align	2
 399              	.L38:
 400 0058 71000F40 		.word	1074724977
 401 005c 90000F40 		.word	1074725008
 402 0060 91000F40 		.word	1074725009
 403 0064 60EA0000 		.word	60000
 404              		.cfi_endproc
 405              	.LFE3:
 406              		.size	PWM_1_Init, .-PWM_1_Init
 407              		.section	.text.PWM_1_Start,"ax",%progbits
 408              		.align	2
 409              		.global	PWM_1_Start
 410              		.code	16
 411              		.thumb_func
 412              		.type	PWM_1_Start, %function
 413              	PWM_1_Start:
 414              	.LFB2:
  56:.\Generated_Source\PSoC4/PWM_1.c ****     /* If not Initialized then initialize all required hardware and software */
 415              		.loc 1 56 0
 416              		.cfi_startproc
 417 0000 08B5     		push	{r3, lr}
 418              		.cfi_def_cfa_offset 8
 419              		.cfi_offset 3, -8
 420              		.cfi_offset 14, -4
  58:.\Generated_Source\PSoC4/PWM_1.c ****     {
 421              		.loc 1 58 0
 422 0002 064B     		ldr	r3, .L42
 423 0004 1B78     		ldrb	r3, [r3]
 424 0006 002B     		cmp	r3, #0
 425 0008 04D1     		bne	.L41
  60:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_initVar = 1u;
 426              		.loc 1 60 0
 427 000a FFF7FEFF 		bl	PWM_1_Init
 428              	.LVL17:
  61:.\Generated_Source\PSoC4/PWM_1.c ****     }
 429              		.loc 1 61 0
 430 000e 0122     		mov	r2, #1
 431 0010 024B     		ldr	r3, .L42
 432 0012 1A70     		strb	r2, [r3]
 433              	.L41:
  63:.\Generated_Source\PSoC4/PWM_1.c **** 
 434              		.loc 1 63 0
 435 0014 FFF7FEFF 		bl	PWM_1_Enable
 436              	.LVL18:
  65:.\Generated_Source\PSoC4/PWM_1.c **** 
ARM GAS  C:\Users\Alec\AppData\Local\Temp\ccvrjwmd.s 			page 23


 437              		.loc 1 65 0
 438              		@ sp needed
 439 0018 08BD     		pop	{r3, pc}
 440              	.L43:
 441 001a C046     		.align	2
 442              	.L42:
 443 001c 00000000 		.word	.LANCHOR0
 444              		.cfi_endproc
 445              	.LFE2:
 446              		.size	PWM_1_Start, .-PWM_1_Start
 447              		.section	.text.PWM_1_ReadCompare,"ax",%progbits
 448              		.align	2
 449              		.global	PWM_1_ReadCompare
 450              		.code	16
 451              		.thumb_func
 452              		.type	PWM_1_ReadCompare, %function
 453              	PWM_1_ReadCompare:
 454              	.LFB16:
 794:.\Generated_Source\PSoC4/PWM_1.c **** 
 795:.\Generated_Source\PSoC4/PWM_1.c **** #endif /* (!PWM_1_UsingFixedFunction) */
 796:.\Generated_Source\PSoC4/PWM_1.c **** 
 797:.\Generated_Source\PSoC4/PWM_1.c **** 
 798:.\Generated_Source\PSoC4/PWM_1.c **** #if (PWM_1_UseOneCompareMode)
 799:.\Generated_Source\PSoC4/PWM_1.c **** 
 800:.\Generated_Source\PSoC4/PWM_1.c **** 
 801:.\Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 802:.\Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_ReadCompare
 803:.\Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 804:.\Generated_Source\PSoC4/PWM_1.c ****     *
 805:.\Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 806:.\Generated_Source\PSoC4/PWM_1.c ****     *  Reads the compare value for the compare output when the PWM Mode parameter is
 807:.\Generated_Source\PSoC4/PWM_1.c ****     *  set to Dither mode, Center Aligned mode, or One Output mode.
 808:.\Generated_Source\PSoC4/PWM_1.c ****     *
 809:.\Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 810:.\Generated_Source\PSoC4/PWM_1.c ****     *  None
 811:.\Generated_Source\PSoC4/PWM_1.c ****     *
 812:.\Generated_Source\PSoC4/PWM_1.c ****     * Return:
 813:.\Generated_Source\PSoC4/PWM_1.c ****     *  uint8/uint16: Current compare value
 814:.\Generated_Source\PSoC4/PWM_1.c ****     *
 815:.\Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 816:.\Generated_Source\PSoC4/PWM_1.c ****     uint16 PWM_1_ReadCompare(void) 
 817:.\Generated_Source\PSoC4/PWM_1.c ****     {
 455              		.loc 1 817 0
 456              		.cfi_startproc
 818:.\Generated_Source\PSoC4/PWM_1.c ****         #if(PWM_1_UsingFixedFunction)
 819:.\Generated_Source\PSoC4/PWM_1.c ****             return ((uint16)CY_GET_REG16(PWM_1_COMPARE1_LSB_PTR));
 820:.\Generated_Source\PSoC4/PWM_1.c ****         #else
 821:.\Generated_Source\PSoC4/PWM_1.c ****             return (CY_GET_REG16(PWM_1_COMPARE1_LSB_PTR));
 457              		.loc 1 821 0
 458 0000 014B     		ldr	r3, .L45
 459 0002 1888     		ldrh	r0, [r3]
 460 0004 80B2     		uxth	r0, r0
 822:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_UsingFixedFunction) */
 823:.\Generated_Source\PSoC4/PWM_1.c ****     }
 461              		.loc 1 823 0
 462              		@ sp needed
 463 0006 7047     		bx	lr
ARM GAS  C:\Users\Alec\AppData\Local\Temp\ccvrjwmd.s 			page 24


 464              	.L46:
 465              		.align	2
 466              	.L45:
 467 0008 40100F40 		.word	1074729024
 468              		.cfi_endproc
 469              	.LFE16:
 470              		.size	PWM_1_ReadCompare, .-PWM_1_ReadCompare
 471              		.section	.text.PWM_1_ReadPeriod,"ax",%progbits
 472              		.align	2
 473              		.global	PWM_1_ReadPeriod
 474              		.code	16
 475              		.thumb_func
 476              		.type	PWM_1_ReadPeriod, %function
 477              	PWM_1_ReadPeriod:
 478              	.LFB17:
 824:.\Generated_Source\PSoC4/PWM_1.c **** 
 825:.\Generated_Source\PSoC4/PWM_1.c **** #else
 826:.\Generated_Source\PSoC4/PWM_1.c **** 
 827:.\Generated_Source\PSoC4/PWM_1.c **** 
 828:.\Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 829:.\Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_ReadCompare1
 830:.\Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 831:.\Generated_Source\PSoC4/PWM_1.c ****     *
 832:.\Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 833:.\Generated_Source\PSoC4/PWM_1.c ****     *  Reads the compare value for the compare1 output.
 834:.\Generated_Source\PSoC4/PWM_1.c ****     *
 835:.\Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 836:.\Generated_Source\PSoC4/PWM_1.c ****     *  None
 837:.\Generated_Source\PSoC4/PWM_1.c ****     *
 838:.\Generated_Source\PSoC4/PWM_1.c ****     * Return:
 839:.\Generated_Source\PSoC4/PWM_1.c ****     *  uint8/uint16: Current compare value.
 840:.\Generated_Source\PSoC4/PWM_1.c ****     *
 841:.\Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 842:.\Generated_Source\PSoC4/PWM_1.c ****     uint16 PWM_1_ReadCompare1(void) 
 843:.\Generated_Source\PSoC4/PWM_1.c ****     {
 844:.\Generated_Source\PSoC4/PWM_1.c ****         return (CY_GET_REG16(PWM_1_COMPARE1_LSB_PTR));
 845:.\Generated_Source\PSoC4/PWM_1.c ****     }
 846:.\Generated_Source\PSoC4/PWM_1.c **** 
 847:.\Generated_Source\PSoC4/PWM_1.c **** 
 848:.\Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 849:.\Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_ReadCompare2
 850:.\Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 851:.\Generated_Source\PSoC4/PWM_1.c ****     *
 852:.\Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 853:.\Generated_Source\PSoC4/PWM_1.c ****     *  Reads the compare value for the compare2 output.
 854:.\Generated_Source\PSoC4/PWM_1.c ****     *
 855:.\Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 856:.\Generated_Source\PSoC4/PWM_1.c ****     *  None
 857:.\Generated_Source\PSoC4/PWM_1.c ****     *
 858:.\Generated_Source\PSoC4/PWM_1.c ****     * Return:
 859:.\Generated_Source\PSoC4/PWM_1.c ****     *  uint8/uint16: Current compare value.
 860:.\Generated_Source\PSoC4/PWM_1.c ****     *
 861:.\Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 862:.\Generated_Source\PSoC4/PWM_1.c ****     uint16 PWM_1_ReadCompare2(void) 
 863:.\Generated_Source\PSoC4/PWM_1.c ****     {
 864:.\Generated_Source\PSoC4/PWM_1.c ****         return (CY_GET_REG16(PWM_1_COMPARE2_LSB_PTR));
 865:.\Generated_Source\PSoC4/PWM_1.c ****     }
ARM GAS  C:\Users\Alec\AppData\Local\Temp\ccvrjwmd.s 			page 25


 866:.\Generated_Source\PSoC4/PWM_1.c **** 
 867:.\Generated_Source\PSoC4/PWM_1.c **** #endif /* (PWM_1_UseOneCompareMode) */
 868:.\Generated_Source\PSoC4/PWM_1.c **** 
 869:.\Generated_Source\PSoC4/PWM_1.c **** 
 870:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 871:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_ReadPeriod
 872:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 873:.\Generated_Source\PSoC4/PWM_1.c **** *
 874:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 875:.\Generated_Source\PSoC4/PWM_1.c **** *  Reads the period value used by the PWM hardware.
 876:.\Generated_Source\PSoC4/PWM_1.c **** *
 877:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 878:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 879:.\Generated_Source\PSoC4/PWM_1.c **** *
 880:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 881:.\Generated_Source\PSoC4/PWM_1.c **** *  uint8/16: Period value
 882:.\Generated_Source\PSoC4/PWM_1.c **** *
 883:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 884:.\Generated_Source\PSoC4/PWM_1.c **** uint16 PWM_1_ReadPeriod(void) 
 885:.\Generated_Source\PSoC4/PWM_1.c **** {
 479              		.loc 1 885 0
 480              		.cfi_startproc
 886:.\Generated_Source\PSoC4/PWM_1.c ****     #if(PWM_1_UsingFixedFunction)
 887:.\Generated_Source\PSoC4/PWM_1.c ****         return ((uint16)CY_GET_REG16(PWM_1_PERIOD_LSB_PTR));
 888:.\Generated_Source\PSoC4/PWM_1.c ****     #else
 889:.\Generated_Source\PSoC4/PWM_1.c ****         return (CY_GET_REG16(PWM_1_PERIOD_LSB_PTR));
 481              		.loc 1 889 0
 482 0000 014B     		ldr	r3, .L48
 483 0002 1888     		ldrh	r0, [r3]
 484 0004 80B2     		uxth	r0, r0
 890:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 891:.\Generated_Source\PSoC4/PWM_1.c **** }
 485              		.loc 1 891 0
 486              		@ sp needed
 487 0006 7047     		bx	lr
 488              	.L49:
 489              		.align	2
 490              	.L48:
 491 0008 80100F40 		.word	1074729088
 492              		.cfi_endproc
 493              	.LFE17:
 494              		.size	PWM_1_ReadPeriod, .-PWM_1_ReadPeriod
 495              		.global	PWM_1_initVar
 496              		.bss
 497              		.set	.LANCHOR0,. + 0
 498              		.type	PWM_1_initVar, %object
 499              		.size	PWM_1_initVar, 1
 500              	PWM_1_initVar:
 501 0000 00       		.space	1
 502              		.text
 503              	.Letext0:
 504              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 505              		.file 3 ".\\Generated_Source\\PSoC4\\CyLib.h"
 506              		.section	.debug_info,"",%progbits
 507              	.Ldebug_info0:
 508 0000 48030000 		.4byte	0x348
 509 0004 0400     		.2byte	0x4
ARM GAS  C:\Users\Alec\AppData\Local\Temp\ccvrjwmd.s 			page 26


 510 0006 00000000 		.4byte	.Ldebug_abbrev0
 511 000a 04       		.byte	0x4
 512 000b 01       		.uleb128 0x1
 513 000c AF010000 		.4byte	.LASF40
 514 0010 01       		.byte	0x1
 515 0011 E1020000 		.4byte	.LASF41
 516 0015 4B020000 		.4byte	.LASF42
 517 0019 00000000 		.4byte	.Ldebug_ranges0+0
 518 001d 00000000 		.4byte	0
 519 0021 00000000 		.4byte	.Ldebug_line0
 520 0025 02       		.uleb128 0x2
 521 0026 01       		.byte	0x1
 522 0027 06       		.byte	0x6
 523 0028 2D030000 		.4byte	.LASF0
 524 002c 02       		.uleb128 0x2
 525 002d 01       		.byte	0x1
 526 002e 08       		.byte	0x8
 527 002f A9000000 		.4byte	.LASF1
 528 0033 02       		.uleb128 0x2
 529 0034 02       		.byte	0x2
 530 0035 05       		.byte	0x5
 531 0036 40010000 		.4byte	.LASF2
 532 003a 02       		.uleb128 0x2
 533 003b 02       		.byte	0x2
 534 003c 07       		.byte	0x7
 535 003d 58000000 		.4byte	.LASF3
 536 0041 02       		.uleb128 0x2
 537 0042 04       		.byte	0x4
 538 0043 05       		.byte	0x5
 539 0044 1F030000 		.4byte	.LASF4
 540 0048 02       		.uleb128 0x2
 541 0049 04       		.byte	0x4
 542 004a 07       		.byte	0x7
 543 004b CD000000 		.4byte	.LASF5
 544 004f 02       		.uleb128 0x2
 545 0050 08       		.byte	0x8
 546 0051 05       		.byte	0x5
 547 0052 99020000 		.4byte	.LASF6
 548 0056 02       		.uleb128 0x2
 549 0057 08       		.byte	0x8
 550 0058 07       		.byte	0x7
 551 0059 92000000 		.4byte	.LASF7
 552 005d 03       		.uleb128 0x3
 553 005e 04       		.byte	0x4
 554 005f 05       		.byte	0x5
 555 0060 696E7400 		.ascii	"int\000"
 556 0064 02       		.uleb128 0x2
 557 0065 04       		.byte	0x4
 558 0066 07       		.byte	0x7
 559 0067 85010000 		.4byte	.LASF8
 560 006b 04       		.uleb128 0x4
 561 006c DF000000 		.4byte	.LASF9
 562 0070 02       		.byte	0x2
 563 0071 9801     		.2byte	0x198
 564 0073 2C000000 		.4byte	0x2c
 565 0077 04       		.uleb128 0x4
 566 0078 5C010000 		.4byte	.LASF10
ARM GAS  C:\Users\Alec\AppData\Local\Temp\ccvrjwmd.s 			page 27


 567 007c 02       		.byte	0x2
 568 007d 9901     		.2byte	0x199
 569 007f 3A000000 		.4byte	0x3a
 570 0083 02       		.uleb128 0x2
 571 0084 04       		.byte	0x4
 572 0085 04       		.byte	0x4
 573 0086 84000000 		.4byte	.LASF11
 574 008a 02       		.uleb128 0x2
 575 008b 08       		.byte	0x8
 576 008c 04       		.byte	0x4
 577 008d 16010000 		.4byte	.LASF12
 578 0091 02       		.uleb128 0x2
 579 0092 01       		.byte	0x1
 580 0093 08       		.byte	0x8
 581 0094 28030000 		.4byte	.LASF13
 582 0098 04       		.uleb128 0x4
 583 0099 B7000000 		.4byte	.LASF14
 584 009d 02       		.byte	0x2
 585 009e 4202     		.2byte	0x242
 586 00a0 A4000000 		.4byte	0xa4
 587 00a4 05       		.uleb128 0x5
 588 00a5 6B000000 		.4byte	0x6b
 589 00a9 04       		.uleb128 0x4
 590 00aa 00000000 		.4byte	.LASF15
 591 00ae 02       		.byte	0x2
 592 00af 4302     		.2byte	0x243
 593 00b1 B5000000 		.4byte	0xb5
 594 00b5 05       		.uleb128 0x5
 595 00b6 77000000 		.4byte	0x77
 596 00ba 02       		.uleb128 0x2
 597 00bb 04       		.byte	0x4
 598 00bc 07       		.byte	0x7
 599 00bd 42020000 		.4byte	.LASF16
 600 00c1 06       		.uleb128 0x6
 601 00c2 06000000 		.4byte	.LASF17
 602 00c6 01       		.byte	0x1
 603 00c7 C7       		.byte	0xc7
 604 00c8 00000000 		.4byte	.LFB4
 605 00cc 10000000 		.4byte	.LFE4-.LFB4
 606 00d0 01       		.uleb128 0x1
 607 00d1 9C       		.byte	0x9c
 608 00d2 06       		.uleb128 0x6
 609 00d3 14030000 		.4byte	.LASF18
 610 00d7 01       		.byte	0x1
 611 00d8 E9       		.byte	0xe9
 612 00d9 00000000 		.4byte	.LFB5
 613 00dd 10000000 		.4byte	.LFE5-.LFB5
 614 00e1 01       		.uleb128 0x1
 615 00e2 9C       		.byte	0x9c
 616 00e3 07       		.uleb128 0x7
 617 00e4 2E000000 		.4byte	.LASF19
 618 00e8 01       		.byte	0x1
 619 00e9 9301     		.2byte	0x193
 620 00eb 00000000 		.4byte	.LFB6
 621 00ef 0C000000 		.4byte	.LFE6-.LFB6
 622 00f3 01       		.uleb128 0x1
 623 00f4 9C       		.byte	0x9c
ARM GAS  C:\Users\Alec\AppData\Local\Temp\ccvrjwmd.s 			page 28


 624 00f5 08010000 		.4byte	0x108
 625 00f9 08       		.uleb128 0x8
 626 00fa 8A000000 		.4byte	.LASF21
 627 00fe 01       		.byte	0x1
 628 00ff 9301     		.2byte	0x193
 629 0101 77000000 		.4byte	0x77
 630 0105 01       		.uleb128 0x1
 631 0106 50       		.byte	0x50
 632 0107 00       		.byte	0
 633 0108 09       		.uleb128 0x9
 634 0109 02030000 		.4byte	.LASF27
 635 010d 01       		.byte	0x1
 636 010e A901     		.2byte	0x1a9
 637 0110 77000000 		.4byte	0x77
 638 0114 00000000 		.4byte	.LFB7
 639 0118 14000000 		.4byte	.LFE7-.LFB7
 640 011c 01       		.uleb128 0x1
 641 011d 9C       		.byte	0x9c
 642 011e 07       		.uleb128 0x7
 643 011f CF020000 		.4byte	.LASF20
 644 0123 01       		.byte	0x1
 645 0124 E201     		.2byte	0x1e2
 646 0126 00000000 		.4byte	.LFB9
 647 012a 0C000000 		.4byte	.LFE9-.LFB9
 648 012e 01       		.uleb128 0x1
 649 012f 9C       		.byte	0x9c
 650 0130 43010000 		.4byte	0x143
 651 0134 08       		.uleb128 0x8
 652 0135 41000000 		.4byte	.LASF22
 653 0139 01       		.byte	0x1
 654 013a E201     		.2byte	0x1e2
 655 013c 77000000 		.4byte	0x77
 656 0140 01       		.uleb128 0x1
 657 0141 50       		.byte	0x50
 658 0142 00       		.byte	0
 659 0143 07       		.uleb128 0x7
 660 0144 86020000 		.4byte	.LASF23
 661 0148 01       		.byte	0x1
 662 0149 0402     		.2byte	0x204
 663 014b 00000000 		.4byte	.LFB10
 664 014f 0C000000 		.4byte	.LFE10-.LFB10
 665 0153 01       		.uleb128 0x1
 666 0154 9C       		.byte	0x9c
 667 0155 68010000 		.4byte	0x168
 668 0159 08       		.uleb128 0x8
 669 015a 39030000 		.4byte	.LASF24
 670 015e 01       		.byte	0x1
 671 015f 0402     		.2byte	0x204
 672 0161 77000000 		.4byte	0x77
 673 0165 01       		.uleb128 0x1
 674 0166 50       		.byte	0x50
 675 0167 00       		.byte	0
 676 0168 07       		.uleb128 0x7
 677 0169 ED000000 		.4byte	.LASF25
 678 016d 01       		.byte	0x1
 679 016e AC02     		.2byte	0x2ac
 680 0170 00000000 		.4byte	.LFB11
ARM GAS  C:\Users\Alec\AppData\Local\Temp\ccvrjwmd.s 			page 29


 681 0174 0C000000 		.4byte	.LFE11-.LFB11
 682 0178 01       		.uleb128 0x1
 683 0179 9C       		.byte	0x9c
 684 017a 8D010000 		.4byte	0x18d
 685 017e 08       		.uleb128 0x8
 686 017f C1020000 		.4byte	.LASF26
 687 0183 01       		.byte	0x1
 688 0184 AC02     		.2byte	0x2ac
 689 0186 6B000000 		.4byte	0x6b
 690 018a 01       		.uleb128 0x1
 691 018b 50       		.byte	0x50
 692 018c 00       		.byte	0
 693 018d 09       		.uleb128 0x9
 694 018e 6B000000 		.4byte	.LASF28
 695 0192 01       		.byte	0x1
 696 0193 C702     		.2byte	0x2c7
 697 0195 6B000000 		.4byte	0x6b
 698 0199 00000000 		.4byte	.LFB12
 699 019d 0C000000 		.4byte	.LFE12-.LFB12
 700 01a1 01       		.uleb128 0x1
 701 01a2 9C       		.byte	0x9c
 702 01a3 0A       		.uleb128 0xa
 703 01a4 A7020000 		.4byte	.LASF43
 704 01a8 01       		.byte	0x1
 705 01a9 E102     		.2byte	0x2e1
 706 01ab 6B000000 		.4byte	0x6b
 707 01af 00000000 		.4byte	.LFB13
 708 01b3 0C000000 		.4byte	.LFE13-.LFB13
 709 01b7 01       		.uleb128 0x1
 710 01b8 9C       		.byte	0x9c
 711 01b9 CC010000 		.4byte	0x1cc
 712 01bd 0B       		.uleb128 0xb
 713 01be A8010000 		.4byte	.LASF34
 714 01c2 01       		.byte	0x1
 715 01c3 E302     		.2byte	0x2e3
 716 01c5 6B000000 		.4byte	0x6b
 717 01c9 01       		.uleb128 0x1
 718 01ca 50       		.byte	0x50
 719 01cb 00       		.byte	0
 720 01cc 07       		.uleb128 0x7
 721 01cd 13000000 		.4byte	.LASF29
 722 01d1 01       		.byte	0x1
 723 01d2 FD02     		.2byte	0x2fd
 724 01d4 00000000 		.4byte	.LFB14
 725 01d8 0C000000 		.4byte	.LFE14-.LFB14
 726 01dc 01       		.uleb128 0x1
 727 01dd 9C       		.byte	0x9c
 728 01de F1010000 		.4byte	0x1f1
 729 01e2 08       		.uleb128 0x8
 730 01e3 E5000000 		.4byte	.LASF30
 731 01e7 01       		.byte	0x1
 732 01e8 FD02     		.2byte	0x2fd
 733 01ea 6B000000 		.4byte	0x6b
 734 01ee 01       		.uleb128 0x1
 735 01ef 50       		.byte	0x50
 736 01f0 00       		.byte	0
 737 01f1 09       		.uleb128 0x9
ARM GAS  C:\Users\Alec\AppData\Local\Temp\ccvrjwmd.s 			page 30


 738 01f2 4A010000 		.4byte	.LASF31
 739 01f6 01       		.byte	0x1
 740 01f7 1603     		.2byte	0x316
 741 01f9 77000000 		.4byte	0x77
 742 01fd 00000000 		.4byte	.LFB15
 743 0201 0C000000 		.4byte	.LFE15-.LFB15
 744 0205 01       		.uleb128 0x1
 745 0206 9C       		.byte	0x9c
 746 0207 07       		.uleb128 0x7
 747 0208 48000000 		.4byte	.LASF32
 748 020c 01       		.byte	0x1
 749 020d C501     		.2byte	0x1c5
 750 020f 00000000 		.4byte	.LFB8
 751 0213 12000000 		.4byte	.LFE8-.LFB8
 752 0217 01       		.uleb128 0x1
 753 0218 9C       		.byte	0x9c
 754 0219 30020000 		.4byte	0x230
 755 021d 0C       		.uleb128 0xc
 756 021e 08000000 		.4byte	.LVL6
 757 0222 F1010000 		.4byte	0x1f1
 758 0226 0C       		.uleb128 0xc
 759 0227 0C000000 		.4byte	.LVL7
 760 022b 8D010000 		.4byte	0x18d
 761 022f 00       		.byte	0
 762 0230 0D       		.uleb128 0xd
 763 0231 63010000 		.4byte	.LASF33
 764 0235 01       		.byte	0x1
 765 0236 54       		.byte	0x54
 766 0237 00000000 		.4byte	.LFB3
 767 023b 68000000 		.4byte	.LFE3-.LFB3
 768 023f 01       		.uleb128 0x1
 769 0240 9C       		.byte	0x9c
 770 0241 CE020000 		.4byte	0x2ce
 771 0245 0E       		.uleb128 0xe
 772 0246 3D020000 		.4byte	.LASF35
 773 024a 01       		.byte	0x1
 774 024b 57       		.byte	0x57
 775 024c 6B000000 		.4byte	0x6b
 776 0250 00000000 		.4byte	.LLST0
 777 0254 0E       		.uleb128 0xe
 778 0255 1D010000 		.4byte	.LASF36
 779 0259 01       		.byte	0x1
 780 025a 5D       		.byte	0x5d
 781 025b 6B000000 		.4byte	0x6b
 782 025f 13000000 		.4byte	.LLST1
 783 0263 0F       		.uleb128 0xf
 784 0264 2E000000 		.4byte	.LVL10
 785 0268 E3000000 		.4byte	0xe3
 786 026c 77020000 		.4byte	0x277
 787 0270 10       		.uleb128 0x10
 788 0271 01       		.uleb128 0x1
 789 0272 50       		.byte	0x50
 790 0273 02       		.uleb128 0x2
 791 0274 75       		.byte	0x75
 792 0275 00       		.sleb128 0
 793 0276 00       		.byte	0
 794 0277 0F       		.uleb128 0xf
ARM GAS  C:\Users\Alec\AppData\Local\Temp\ccvrjwmd.s 			page 31


 795 0278 34000000 		.4byte	.LVL11
 796 027c 1E010000 		.4byte	0x11e
 797 0280 8B020000 		.4byte	0x28b
 798 0284 10       		.uleb128 0x10
 799 0285 01       		.uleb128 0x1
 800 0286 50       		.byte	0x50
 801 0287 02       		.uleb128 0x2
 802 0288 75       		.byte	0x75
 803 0289 00       		.sleb128 0
 804 028a 00       		.byte	0
 805 028b 0F       		.uleb128 0xf
 806 028c 3A000000 		.4byte	.LVL12
 807 0290 43010000 		.4byte	0x143
 808 0294 9F020000 		.4byte	0x29f
 809 0298 10       		.uleb128 0x10
 810 0299 01       		.uleb128 0x1
 811 029a 50       		.byte	0x50
 812 029b 02       		.uleb128 0x2
 813 029c 08       		.byte	0x8
 814 029d 7F       		.byte	0x7f
 815 029e 00       		.byte	0
 816 029f 0F       		.uleb128 0xf
 817 02a0 40000000 		.4byte	.LVL13
 818 02a4 68010000 		.4byte	0x168
 819 02a8 B2020000 		.4byte	0x2b2
 820 02ac 10       		.uleb128 0x10
 821 02ad 01       		.uleb128 0x1
 822 02ae 50       		.byte	0x50
 823 02af 01       		.uleb128 0x1
 824 02b0 30       		.byte	0x30
 825 02b1 00       		.byte	0
 826 02b2 0C       		.uleb128 0xc
 827 02b3 44000000 		.4byte	.LVL14
 828 02b7 33030000 		.4byte	0x333
 829 02bb 0C       		.uleb128 0xc
 830 02bc 50000000 		.4byte	.LVL15
 831 02c0 3E030000 		.4byte	0x33e
 832 02c4 0C       		.uleb128 0xc
 833 02c5 54000000 		.4byte	.LVL16
 834 02c9 07020000 		.4byte	0x207
 835 02cd 00       		.byte	0
 836 02ce 0D       		.uleb128 0xd
 837 02cf 41030000 		.4byte	.LASF37
 838 02d3 01       		.byte	0x1
 839 02d4 37       		.byte	0x37
 840 02d5 00000000 		.4byte	.LFB2
 841 02d9 20000000 		.4byte	.LFE2-.LFB2
 842 02dd 01       		.uleb128 0x1
 843 02de 9C       		.byte	0x9c
 844 02df F6020000 		.4byte	0x2f6
 845 02e3 0C       		.uleb128 0xc
 846 02e4 0E000000 		.4byte	.LVL17
 847 02e8 30020000 		.4byte	0x230
 848 02ec 0C       		.uleb128 0xc
 849 02ed 18000000 		.4byte	.LVL18
 850 02f1 C1000000 		.4byte	0xc1
 851 02f5 00       		.byte	0
ARM GAS  C:\Users\Alec\AppData\Local\Temp\ccvrjwmd.s 			page 32


 852 02f6 09       		.uleb128 0x9
 853 02f7 04010000 		.4byte	.LASF38
 854 02fb 01       		.byte	0x1
 855 02fc 3003     		.2byte	0x330
 856 02fe 77000000 		.4byte	0x77
 857 0302 00000000 		.4byte	.LFB16
 858 0306 0C000000 		.4byte	.LFE16-.LFB16
 859 030a 01       		.uleb128 0x1
 860 030b 9C       		.byte	0x9c
 861 030c 09       		.uleb128 0x9
 862 030d BC000000 		.4byte	.LASF39
 863 0311 01       		.byte	0x1
 864 0312 7403     		.2byte	0x374
 865 0314 77000000 		.4byte	0x77
 866 0318 00000000 		.4byte	.LFB17
 867 031c 0C000000 		.4byte	.LFE17-.LFB17
 868 0320 01       		.uleb128 0x1
 869 0321 9C       		.byte	0x9c
 870 0322 11       		.uleb128 0x11
 871 0323 32010000 		.4byte	.LASF44
 872 0327 01       		.byte	0x1
 873 0328 20       		.byte	0x20
 874 0329 6B000000 		.4byte	0x6b
 875 032d 05       		.uleb128 0x5
 876 032e 03       		.byte	0x3
 877 032f 00000000 		.4byte	PWM_1_initVar
 878 0333 12       		.uleb128 0x12
 879 0334 6E010000 		.4byte	.LASF45
 880 0338 03       		.byte	0x3
 881 0339 E3       		.byte	0xe3
 882 033a 6B000000 		.4byte	0x6b
 883 033e 13       		.uleb128 0x13
 884 033f 92010000 		.4byte	.LASF46
 885 0343 03       		.byte	0x3
 886 0344 E4       		.byte	0xe4
 887 0345 14       		.uleb128 0x14
 888 0346 6B000000 		.4byte	0x6b
 889 034a 00       		.byte	0
 890 034b 00       		.byte	0
 891              		.section	.debug_abbrev,"",%progbits
 892              	.Ldebug_abbrev0:
 893 0000 01       		.uleb128 0x1
 894 0001 11       		.uleb128 0x11
 895 0002 01       		.byte	0x1
 896 0003 25       		.uleb128 0x25
 897 0004 0E       		.uleb128 0xe
 898 0005 13       		.uleb128 0x13
 899 0006 0B       		.uleb128 0xb
 900 0007 03       		.uleb128 0x3
 901 0008 0E       		.uleb128 0xe
 902 0009 1B       		.uleb128 0x1b
 903 000a 0E       		.uleb128 0xe
 904 000b 55       		.uleb128 0x55
 905 000c 17       		.uleb128 0x17
 906 000d 11       		.uleb128 0x11
 907 000e 01       		.uleb128 0x1
 908 000f 10       		.uleb128 0x10
ARM GAS  C:\Users\Alec\AppData\Local\Temp\ccvrjwmd.s 			page 33


 909 0010 17       		.uleb128 0x17
 910 0011 00       		.byte	0
 911 0012 00       		.byte	0
 912 0013 02       		.uleb128 0x2
 913 0014 24       		.uleb128 0x24
 914 0015 00       		.byte	0
 915 0016 0B       		.uleb128 0xb
 916 0017 0B       		.uleb128 0xb
 917 0018 3E       		.uleb128 0x3e
 918 0019 0B       		.uleb128 0xb
 919 001a 03       		.uleb128 0x3
 920 001b 0E       		.uleb128 0xe
 921 001c 00       		.byte	0
 922 001d 00       		.byte	0
 923 001e 03       		.uleb128 0x3
 924 001f 24       		.uleb128 0x24
 925 0020 00       		.byte	0
 926 0021 0B       		.uleb128 0xb
 927 0022 0B       		.uleb128 0xb
 928 0023 3E       		.uleb128 0x3e
 929 0024 0B       		.uleb128 0xb
 930 0025 03       		.uleb128 0x3
 931 0026 08       		.uleb128 0x8
 932 0027 00       		.byte	0
 933 0028 00       		.byte	0
 934 0029 04       		.uleb128 0x4
 935 002a 16       		.uleb128 0x16
 936 002b 00       		.byte	0
 937 002c 03       		.uleb128 0x3
 938 002d 0E       		.uleb128 0xe
 939 002e 3A       		.uleb128 0x3a
 940 002f 0B       		.uleb128 0xb
 941 0030 3B       		.uleb128 0x3b
 942 0031 05       		.uleb128 0x5
 943 0032 49       		.uleb128 0x49
 944 0033 13       		.uleb128 0x13
 945 0034 00       		.byte	0
 946 0035 00       		.byte	0
 947 0036 05       		.uleb128 0x5
 948 0037 35       		.uleb128 0x35
 949 0038 00       		.byte	0
 950 0039 49       		.uleb128 0x49
 951 003a 13       		.uleb128 0x13
 952 003b 00       		.byte	0
 953 003c 00       		.byte	0
 954 003d 06       		.uleb128 0x6
 955 003e 2E       		.uleb128 0x2e
 956 003f 00       		.byte	0
 957 0040 3F       		.uleb128 0x3f
 958 0041 19       		.uleb128 0x19
 959 0042 03       		.uleb128 0x3
 960 0043 0E       		.uleb128 0xe
 961 0044 3A       		.uleb128 0x3a
 962 0045 0B       		.uleb128 0xb
 963 0046 3B       		.uleb128 0x3b
 964 0047 0B       		.uleb128 0xb
 965 0048 27       		.uleb128 0x27
ARM GAS  C:\Users\Alec\AppData\Local\Temp\ccvrjwmd.s 			page 34


 966 0049 19       		.uleb128 0x19
 967 004a 11       		.uleb128 0x11
 968 004b 01       		.uleb128 0x1
 969 004c 12       		.uleb128 0x12
 970 004d 06       		.uleb128 0x6
 971 004e 40       		.uleb128 0x40
 972 004f 18       		.uleb128 0x18
 973 0050 9742     		.uleb128 0x2117
 974 0052 19       		.uleb128 0x19
 975 0053 00       		.byte	0
 976 0054 00       		.byte	0
 977 0055 07       		.uleb128 0x7
 978 0056 2E       		.uleb128 0x2e
 979 0057 01       		.byte	0x1
 980 0058 3F       		.uleb128 0x3f
 981 0059 19       		.uleb128 0x19
 982 005a 03       		.uleb128 0x3
 983 005b 0E       		.uleb128 0xe
 984 005c 3A       		.uleb128 0x3a
 985 005d 0B       		.uleb128 0xb
 986 005e 3B       		.uleb128 0x3b
 987 005f 05       		.uleb128 0x5
 988 0060 27       		.uleb128 0x27
 989 0061 19       		.uleb128 0x19
 990 0062 11       		.uleb128 0x11
 991 0063 01       		.uleb128 0x1
 992 0064 12       		.uleb128 0x12
 993 0065 06       		.uleb128 0x6
 994 0066 40       		.uleb128 0x40
 995 0067 18       		.uleb128 0x18
 996 0068 9742     		.uleb128 0x2117
 997 006a 19       		.uleb128 0x19
 998 006b 01       		.uleb128 0x1
 999 006c 13       		.uleb128 0x13
 1000 006d 00       		.byte	0
 1001 006e 00       		.byte	0
 1002 006f 08       		.uleb128 0x8
 1003 0070 05       		.uleb128 0x5
 1004 0071 00       		.byte	0
 1005 0072 03       		.uleb128 0x3
 1006 0073 0E       		.uleb128 0xe
 1007 0074 3A       		.uleb128 0x3a
 1008 0075 0B       		.uleb128 0xb
 1009 0076 3B       		.uleb128 0x3b
 1010 0077 05       		.uleb128 0x5
 1011 0078 49       		.uleb128 0x49
 1012 0079 13       		.uleb128 0x13
 1013 007a 02       		.uleb128 0x2
 1014 007b 18       		.uleb128 0x18
 1015 007c 00       		.byte	0
 1016 007d 00       		.byte	0
 1017 007e 09       		.uleb128 0x9
 1018 007f 2E       		.uleb128 0x2e
 1019 0080 00       		.byte	0
 1020 0081 3F       		.uleb128 0x3f
 1021 0082 19       		.uleb128 0x19
 1022 0083 03       		.uleb128 0x3
ARM GAS  C:\Users\Alec\AppData\Local\Temp\ccvrjwmd.s 			page 35


 1023 0084 0E       		.uleb128 0xe
 1024 0085 3A       		.uleb128 0x3a
 1025 0086 0B       		.uleb128 0xb
 1026 0087 3B       		.uleb128 0x3b
 1027 0088 05       		.uleb128 0x5
 1028 0089 27       		.uleb128 0x27
 1029 008a 19       		.uleb128 0x19
 1030 008b 49       		.uleb128 0x49
 1031 008c 13       		.uleb128 0x13
 1032 008d 11       		.uleb128 0x11
 1033 008e 01       		.uleb128 0x1
 1034 008f 12       		.uleb128 0x12
 1035 0090 06       		.uleb128 0x6
 1036 0091 40       		.uleb128 0x40
 1037 0092 18       		.uleb128 0x18
 1038 0093 9742     		.uleb128 0x2117
 1039 0095 19       		.uleb128 0x19
 1040 0096 00       		.byte	0
 1041 0097 00       		.byte	0
 1042 0098 0A       		.uleb128 0xa
 1043 0099 2E       		.uleb128 0x2e
 1044 009a 01       		.byte	0x1
 1045 009b 3F       		.uleb128 0x3f
 1046 009c 19       		.uleb128 0x19
 1047 009d 03       		.uleb128 0x3
 1048 009e 0E       		.uleb128 0xe
 1049 009f 3A       		.uleb128 0x3a
 1050 00a0 0B       		.uleb128 0xb
 1051 00a1 3B       		.uleb128 0x3b
 1052 00a2 05       		.uleb128 0x5
 1053 00a3 27       		.uleb128 0x27
 1054 00a4 19       		.uleb128 0x19
 1055 00a5 49       		.uleb128 0x49
 1056 00a6 13       		.uleb128 0x13
 1057 00a7 11       		.uleb128 0x11
 1058 00a8 01       		.uleb128 0x1
 1059 00a9 12       		.uleb128 0x12
 1060 00aa 06       		.uleb128 0x6
 1061 00ab 40       		.uleb128 0x40
 1062 00ac 18       		.uleb128 0x18
 1063 00ad 9742     		.uleb128 0x2117
 1064 00af 19       		.uleb128 0x19
 1065 00b0 01       		.uleb128 0x1
 1066 00b1 13       		.uleb128 0x13
 1067 00b2 00       		.byte	0
 1068 00b3 00       		.byte	0
 1069 00b4 0B       		.uleb128 0xb
 1070 00b5 34       		.uleb128 0x34
 1071 00b6 00       		.byte	0
 1072 00b7 03       		.uleb128 0x3
 1073 00b8 0E       		.uleb128 0xe
 1074 00b9 3A       		.uleb128 0x3a
 1075 00ba 0B       		.uleb128 0xb
 1076 00bb 3B       		.uleb128 0x3b
 1077 00bc 05       		.uleb128 0x5
 1078 00bd 49       		.uleb128 0x49
 1079 00be 13       		.uleb128 0x13
ARM GAS  C:\Users\Alec\AppData\Local\Temp\ccvrjwmd.s 			page 36


 1080 00bf 02       		.uleb128 0x2
 1081 00c0 18       		.uleb128 0x18
 1082 00c1 00       		.byte	0
 1083 00c2 00       		.byte	0
 1084 00c3 0C       		.uleb128 0xc
 1085 00c4 898201   		.uleb128 0x4109
 1086 00c7 00       		.byte	0
 1087 00c8 11       		.uleb128 0x11
 1088 00c9 01       		.uleb128 0x1
 1089 00ca 31       		.uleb128 0x31
 1090 00cb 13       		.uleb128 0x13
 1091 00cc 00       		.byte	0
 1092 00cd 00       		.byte	0
 1093 00ce 0D       		.uleb128 0xd
 1094 00cf 2E       		.uleb128 0x2e
 1095 00d0 01       		.byte	0x1
 1096 00d1 3F       		.uleb128 0x3f
 1097 00d2 19       		.uleb128 0x19
 1098 00d3 03       		.uleb128 0x3
 1099 00d4 0E       		.uleb128 0xe
 1100 00d5 3A       		.uleb128 0x3a
 1101 00d6 0B       		.uleb128 0xb
 1102 00d7 3B       		.uleb128 0x3b
 1103 00d8 0B       		.uleb128 0xb
 1104 00d9 27       		.uleb128 0x27
 1105 00da 19       		.uleb128 0x19
 1106 00db 11       		.uleb128 0x11
 1107 00dc 01       		.uleb128 0x1
 1108 00dd 12       		.uleb128 0x12
 1109 00de 06       		.uleb128 0x6
 1110 00df 40       		.uleb128 0x40
 1111 00e0 18       		.uleb128 0x18
 1112 00e1 9742     		.uleb128 0x2117
 1113 00e3 19       		.uleb128 0x19
 1114 00e4 01       		.uleb128 0x1
 1115 00e5 13       		.uleb128 0x13
 1116 00e6 00       		.byte	0
 1117 00e7 00       		.byte	0
 1118 00e8 0E       		.uleb128 0xe
 1119 00e9 34       		.uleb128 0x34
 1120 00ea 00       		.byte	0
 1121 00eb 03       		.uleb128 0x3
 1122 00ec 0E       		.uleb128 0xe
 1123 00ed 3A       		.uleb128 0x3a
 1124 00ee 0B       		.uleb128 0xb
 1125 00ef 3B       		.uleb128 0x3b
 1126 00f0 0B       		.uleb128 0xb
 1127 00f1 49       		.uleb128 0x49
 1128 00f2 13       		.uleb128 0x13
 1129 00f3 02       		.uleb128 0x2
 1130 00f4 17       		.uleb128 0x17
 1131 00f5 00       		.byte	0
 1132 00f6 00       		.byte	0
 1133 00f7 0F       		.uleb128 0xf
 1134 00f8 898201   		.uleb128 0x4109
 1135 00fb 01       		.byte	0x1
 1136 00fc 11       		.uleb128 0x11
ARM GAS  C:\Users\Alec\AppData\Local\Temp\ccvrjwmd.s 			page 37


 1137 00fd 01       		.uleb128 0x1
 1138 00fe 31       		.uleb128 0x31
 1139 00ff 13       		.uleb128 0x13
 1140 0100 01       		.uleb128 0x1
 1141 0101 13       		.uleb128 0x13
 1142 0102 00       		.byte	0
 1143 0103 00       		.byte	0
 1144 0104 10       		.uleb128 0x10
 1145 0105 8A8201   		.uleb128 0x410a
 1146 0108 00       		.byte	0
 1147 0109 02       		.uleb128 0x2
 1148 010a 18       		.uleb128 0x18
 1149 010b 9142     		.uleb128 0x2111
 1150 010d 18       		.uleb128 0x18
 1151 010e 00       		.byte	0
 1152 010f 00       		.byte	0
 1153 0110 11       		.uleb128 0x11
 1154 0111 34       		.uleb128 0x34
 1155 0112 00       		.byte	0
 1156 0113 03       		.uleb128 0x3
 1157 0114 0E       		.uleb128 0xe
 1158 0115 3A       		.uleb128 0x3a
 1159 0116 0B       		.uleb128 0xb
 1160 0117 3B       		.uleb128 0x3b
 1161 0118 0B       		.uleb128 0xb
 1162 0119 49       		.uleb128 0x49
 1163 011a 13       		.uleb128 0x13
 1164 011b 3F       		.uleb128 0x3f
 1165 011c 19       		.uleb128 0x19
 1166 011d 02       		.uleb128 0x2
 1167 011e 18       		.uleb128 0x18
 1168 011f 00       		.byte	0
 1169 0120 00       		.byte	0
 1170 0121 12       		.uleb128 0x12
 1171 0122 2E       		.uleb128 0x2e
 1172 0123 00       		.byte	0
 1173 0124 3F       		.uleb128 0x3f
 1174 0125 19       		.uleb128 0x19
 1175 0126 03       		.uleb128 0x3
 1176 0127 0E       		.uleb128 0xe
 1177 0128 3A       		.uleb128 0x3a
 1178 0129 0B       		.uleb128 0xb
 1179 012a 3B       		.uleb128 0x3b
 1180 012b 0B       		.uleb128 0xb
 1181 012c 27       		.uleb128 0x27
 1182 012d 19       		.uleb128 0x19
 1183 012e 49       		.uleb128 0x49
 1184 012f 13       		.uleb128 0x13
 1185 0130 3C       		.uleb128 0x3c
 1186 0131 19       		.uleb128 0x19
 1187 0132 00       		.byte	0
 1188 0133 00       		.byte	0
 1189 0134 13       		.uleb128 0x13
 1190 0135 2E       		.uleb128 0x2e
 1191 0136 01       		.byte	0x1
 1192 0137 3F       		.uleb128 0x3f
 1193 0138 19       		.uleb128 0x19
ARM GAS  C:\Users\Alec\AppData\Local\Temp\ccvrjwmd.s 			page 38


 1194 0139 03       		.uleb128 0x3
 1195 013a 0E       		.uleb128 0xe
 1196 013b 3A       		.uleb128 0x3a
 1197 013c 0B       		.uleb128 0xb
 1198 013d 3B       		.uleb128 0x3b
 1199 013e 0B       		.uleb128 0xb
 1200 013f 27       		.uleb128 0x27
 1201 0140 19       		.uleb128 0x19
 1202 0141 3C       		.uleb128 0x3c
 1203 0142 19       		.uleb128 0x19
 1204 0143 00       		.byte	0
 1205 0144 00       		.byte	0
 1206 0145 14       		.uleb128 0x14
 1207 0146 05       		.uleb128 0x5
 1208 0147 00       		.byte	0
 1209 0148 49       		.uleb128 0x49
 1210 0149 13       		.uleb128 0x13
 1211 014a 00       		.byte	0
 1212 014b 00       		.byte	0
 1213 014c 00       		.byte	0
 1214              		.section	.debug_loc,"",%progbits
 1215              	.Ldebug_loc0:
 1216              	.LLST0:
 1217 0000 0A000000 		.4byte	.LVL8
 1218 0004 0E000000 		.4byte	.LVL9
 1219 0008 0100     		.2byte	0x1
 1220 000a 53       		.byte	0x53
 1221 000b 00000000 		.4byte	0
 1222 000f 00000000 		.4byte	0
 1223              	.LLST1:
 1224 0013 44000000 		.4byte	.LVL14
 1225 0017 4F000000 		.4byte	.LVL15-1
 1226 001b 0100     		.2byte	0x1
 1227 001d 50       		.byte	0x50
 1228 001e 00000000 		.4byte	0
 1229 0022 00000000 		.4byte	0
 1230              		.section	.debug_aranges,"",%progbits
 1231 0000 94000000 		.4byte	0x94
 1232 0004 0200     		.2byte	0x2
 1233 0006 00000000 		.4byte	.Ldebug_info0
 1234 000a 04       		.byte	0x4
 1235 000b 00       		.byte	0
 1236 000c 0000     		.2byte	0
 1237 000e 0000     		.2byte	0
 1238 0010 00000000 		.4byte	.LFB4
 1239 0014 10000000 		.4byte	.LFE4-.LFB4
 1240 0018 00000000 		.4byte	.LFB5
 1241 001c 10000000 		.4byte	.LFE5-.LFB5
 1242 0020 00000000 		.4byte	.LFB6
 1243 0024 0C000000 		.4byte	.LFE6-.LFB6
 1244 0028 00000000 		.4byte	.LFB7
 1245 002c 14000000 		.4byte	.LFE7-.LFB7
 1246 0030 00000000 		.4byte	.LFB9
 1247 0034 0C000000 		.4byte	.LFE9-.LFB9
 1248 0038 00000000 		.4byte	.LFB10
 1249 003c 0C000000 		.4byte	.LFE10-.LFB10
 1250 0040 00000000 		.4byte	.LFB11
ARM GAS  C:\Users\Alec\AppData\Local\Temp\ccvrjwmd.s 			page 39


 1251 0044 0C000000 		.4byte	.LFE11-.LFB11
 1252 0048 00000000 		.4byte	.LFB12
 1253 004c 0C000000 		.4byte	.LFE12-.LFB12
 1254 0050 00000000 		.4byte	.LFB13
 1255 0054 0C000000 		.4byte	.LFE13-.LFB13
 1256 0058 00000000 		.4byte	.LFB14
 1257 005c 0C000000 		.4byte	.LFE14-.LFB14
 1258 0060 00000000 		.4byte	.LFB15
 1259 0064 0C000000 		.4byte	.LFE15-.LFB15
 1260 0068 00000000 		.4byte	.LFB8
 1261 006c 12000000 		.4byte	.LFE8-.LFB8
 1262 0070 00000000 		.4byte	.LFB3
 1263 0074 68000000 		.4byte	.LFE3-.LFB3
 1264 0078 00000000 		.4byte	.LFB2
 1265 007c 20000000 		.4byte	.LFE2-.LFB2
 1266 0080 00000000 		.4byte	.LFB16
 1267 0084 0C000000 		.4byte	.LFE16-.LFB16
 1268 0088 00000000 		.4byte	.LFB17
 1269 008c 0C000000 		.4byte	.LFE17-.LFB17
 1270 0090 00000000 		.4byte	0
 1271 0094 00000000 		.4byte	0
 1272              		.section	.debug_ranges,"",%progbits
 1273              	.Ldebug_ranges0:
 1274 0000 00000000 		.4byte	.LFB4
 1275 0004 10000000 		.4byte	.LFE4
 1276 0008 00000000 		.4byte	.LFB5
 1277 000c 10000000 		.4byte	.LFE5
 1278 0010 00000000 		.4byte	.LFB6
 1279 0014 0C000000 		.4byte	.LFE6
 1280 0018 00000000 		.4byte	.LFB7
 1281 001c 14000000 		.4byte	.LFE7
 1282 0020 00000000 		.4byte	.LFB9
 1283 0024 0C000000 		.4byte	.LFE9
 1284 0028 00000000 		.4byte	.LFB10
 1285 002c 0C000000 		.4byte	.LFE10
 1286 0030 00000000 		.4byte	.LFB11
 1287 0034 0C000000 		.4byte	.LFE11
 1288 0038 00000000 		.4byte	.LFB12
 1289 003c 0C000000 		.4byte	.LFE12
 1290 0040 00000000 		.4byte	.LFB13
 1291 0044 0C000000 		.4byte	.LFE13
 1292 0048 00000000 		.4byte	.LFB14
 1293 004c 0C000000 		.4byte	.LFE14
 1294 0050 00000000 		.4byte	.LFB15
 1295 0054 0C000000 		.4byte	.LFE15
 1296 0058 00000000 		.4byte	.LFB8
 1297 005c 12000000 		.4byte	.LFE8
 1298 0060 00000000 		.4byte	.LFB3
 1299 0064 68000000 		.4byte	.LFE3
 1300 0068 00000000 		.4byte	.LFB2
 1301 006c 20000000 		.4byte	.LFE2
 1302 0070 00000000 		.4byte	.LFB16
 1303 0074 0C000000 		.4byte	.LFE16
 1304 0078 00000000 		.4byte	.LFB17
 1305 007c 0C000000 		.4byte	.LFE17
 1306 0080 00000000 		.4byte	0
 1307 0084 00000000 		.4byte	0
ARM GAS  C:\Users\Alec\AppData\Local\Temp\ccvrjwmd.s 			page 40


 1308              		.section	.debug_line,"",%progbits
 1309              	.Ldebug_line0:
 1310 0000 91010000 		.section	.debug_str,"MS",%progbits,1
 1310      02004F00 
 1310      00000201 
 1310      FB0E0D00 
 1310      01010101 
 1311              	.LASF15:
 1312 0000 72656731 		.ascii	"reg16\000"
 1312      3600
 1313              	.LASF17:
 1314 0006 50574D5F 		.ascii	"PWM_1_Enable\000"
 1314      315F456E 
 1314      61626C65 
 1314      00
 1315              	.LASF29:
 1316 0013 50574D5F 		.ascii	"PWM_1_WriteControlRegister\000"
 1316      315F5772 
 1316      69746543 
 1316      6F6E7472 
 1316      6F6C5265 
 1317              	.LASF19:
 1318 002e 50574D5F 		.ascii	"PWM_1_WriteCounter\000"
 1318      315F5772 
 1318      69746543 
 1318      6F756E74 
 1318      657200
 1319              	.LASF22:
 1320 0041 70657269 		.ascii	"period\000"
 1320      6F6400
 1321              	.LASF32:
 1322 0048 50574D5F 		.ascii	"PWM_1_ClearFIFO\000"
 1322      315F436C 
 1322      65617246 
 1322      49464F00 
 1323              	.LASF3:
 1324 0058 73686F72 		.ascii	"short unsigned int\000"
 1324      7420756E 
 1324      7369676E 
 1324      65642069 
 1324      6E7400
 1325              	.LASF28:
 1326 006b 50574D5F 		.ascii	"PWM_1_ReadStatusRegister\000"
 1326      315F5265 
 1326      61645374 
 1326      61747573 
 1326      52656769 
 1327              	.LASF11:
 1328 0084 666C6F61 		.ascii	"float\000"
 1328      7400
 1329              	.LASF21:
 1330 008a 636F756E 		.ascii	"counter\000"
 1330      74657200 
 1331              	.LASF7:
 1332 0092 6C6F6E67 		.ascii	"long long unsigned int\000"
 1332      206C6F6E 
 1332      6720756E 
ARM GAS  C:\Users\Alec\AppData\Local\Temp\ccvrjwmd.s 			page 41


 1332      7369676E 
 1332      65642069 
 1333              	.LASF1:
 1334 00a9 756E7369 		.ascii	"unsigned char\000"
 1334      676E6564 
 1334      20636861 
 1334      7200
 1335              	.LASF14:
 1336 00b7 72656738 		.ascii	"reg8\000"
 1336      00
 1337              	.LASF39:
 1338 00bc 50574D5F 		.ascii	"PWM_1_ReadPeriod\000"
 1338      315F5265 
 1338      61645065 
 1338      72696F64 
 1338      00
 1339              	.LASF5:
 1340 00cd 6C6F6E67 		.ascii	"long unsigned int\000"
 1340      20756E73 
 1340      69676E65 
 1340      6420696E 
 1340      7400
 1341              	.LASF9:
 1342 00df 75696E74 		.ascii	"uint8\000"
 1342      3800
 1343              	.LASF30:
 1344 00e5 636F6E74 		.ascii	"control\000"
 1344      726F6C00 
 1345              	.LASF25:
 1346 00ed 50574D5F 		.ascii	"PWM_1_SetInterruptMode\000"
 1346      315F5365 
 1346      74496E74 
 1346      65727275 
 1346      70744D6F 
 1347              	.LASF38:
 1348 0104 50574D5F 		.ascii	"PWM_1_ReadCompare\000"
 1348      315F5265 
 1348      6164436F 
 1348      6D706172 
 1348      6500
 1349              	.LASF12:
 1350 0116 646F7562 		.ascii	"double\000"
 1350      6C6500
 1351              	.LASF36:
 1352 011d 50574D5F 		.ascii	"PWM_1_interruptState\000"
 1352      315F696E 
 1352      74657272 
 1352      75707453 
 1352      74617465 
 1353              	.LASF44:
 1354 0132 50574D5F 		.ascii	"PWM_1_initVar\000"
 1354      315F696E 
 1354      69745661 
 1354      7200
 1355              	.LASF2:
 1356 0140 73686F72 		.ascii	"short int\000"
 1356      7420696E 
ARM GAS  C:\Users\Alec\AppData\Local\Temp\ccvrjwmd.s 			page 42


 1356      7400
 1357              	.LASF31:
 1358 014a 50574D5F 		.ascii	"PWM_1_ReadCapture\000"
 1358      315F5265 
 1358      61644361 
 1358      70747572 
 1358      6500
 1359              	.LASF10:
 1360 015c 75696E74 		.ascii	"uint16\000"
 1360      313600
 1361              	.LASF33:
 1362 0163 50574D5F 		.ascii	"PWM_1_Init\000"
 1362      315F496E 
 1362      697400
 1363              	.LASF45:
 1364 016e 4379456E 		.ascii	"CyEnterCriticalSection\000"
 1364      74657243 
 1364      72697469 
 1364      63616C53 
 1364      65637469 
 1365              	.LASF8:
 1366 0185 756E7369 		.ascii	"unsigned int\000"
 1366      676E6564 
 1366      20696E74 
 1366      00
 1367              	.LASF46:
 1368 0192 43794578 		.ascii	"CyExitCriticalSection\000"
 1368      69744372 
 1368      69746963 
 1368      616C5365 
 1368      6374696F 
 1369              	.LASF34:
 1370 01a8 72657375 		.ascii	"result\000"
 1370      6C7400
 1371              	.LASF40:
 1372 01af 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1372      4320342E 
 1372      392E3320 
 1372      32303135 
 1372      30333033 
 1373 01e2 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 1373      20726576 
 1373      6973696F 
 1373      6E203232 
 1373      31323230 
 1374 0215 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1374      66756E63 
 1374      74696F6E 
 1374      2D736563 
 1374      74696F6E 
 1375              	.LASF35:
 1376 023d 6374726C 		.ascii	"ctrl\000"
 1376      00
 1377              	.LASF16:
 1378 0242 73697A65 		.ascii	"sizetype\000"
 1378      74797065 
 1378      00
ARM GAS  C:\Users\Alec\AppData\Local\Temp\ccvrjwmd.s 			page 43


 1379              	.LASF42:
 1380 024b 433A5C55 		.ascii	"C:\\Users\\Alec\\Documents\\PSoC Creator\\Final\\Re"
 1380      73657273 
 1380      5C416C65 
 1380      635C446F 
 1380      63756D65 
 1381 0278 616C4669 		.ascii	"alFinal.cydsn\000"
 1381      6E616C2E 
 1381      63796473 
 1381      6E00
 1382              	.LASF23:
 1383 0286 50574D5F 		.ascii	"PWM_1_WriteCompare\000"
 1383      315F5772 
 1383      69746543 
 1383      6F6D7061 
 1383      726500
 1384              	.LASF6:
 1385 0299 6C6F6E67 		.ascii	"long long int\000"
 1385      206C6F6E 
 1385      6720696E 
 1385      7400
 1386              	.LASF43:
 1387 02a7 50574D5F 		.ascii	"PWM_1_ReadControlRegister\000"
 1387      315F5265 
 1387      6164436F 
 1387      6E74726F 
 1387      6C526567 
 1388              	.LASF26:
 1389 02c1 696E7465 		.ascii	"interruptMode\000"
 1389      72727570 
 1389      744D6F64 
 1389      6500
 1390              	.LASF20:
 1391 02cf 50574D5F 		.ascii	"PWM_1_WritePeriod\000"
 1391      315F5772 
 1391      69746550 
 1391      6572696F 
 1391      6400
 1392              	.LASF41:
 1393 02e1 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\PWM_1.c\000"
 1393      6E657261 
 1393      7465645F 
 1393      536F7572 
 1393      63655C50 
 1394              	.LASF27:
 1395 0302 50574D5F 		.ascii	"PWM_1_ReadCounter\000"
 1395      315F5265 
 1395      6164436F 
 1395      756E7465 
 1395      7200
 1396              	.LASF18:
 1397 0314 50574D5F 		.ascii	"PWM_1_Stop\000"
 1397      315F5374 
 1397      6F7000
 1398              	.LASF4:
 1399 031f 6C6F6E67 		.ascii	"long int\000"
 1399      20696E74 
ARM GAS  C:\Users\Alec\AppData\Local\Temp\ccvrjwmd.s 			page 44


 1399      00
 1400              	.LASF13:
 1401 0328 63686172 		.ascii	"char\000"
 1401      00
 1402              	.LASF0:
 1403 032d 7369676E 		.ascii	"signed char\000"
 1403      65642063 
 1403      68617200 
 1404              	.LASF24:
 1405 0339 636F6D70 		.ascii	"compare\000"
 1405      61726500 
 1406              	.LASF37:
 1407 0341 50574D5F 		.ascii	"PWM_1_Start\000"
 1407      315F5374 
 1407      61727400 
 1408              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
